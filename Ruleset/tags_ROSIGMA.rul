extended:
  tags:

    RuleArmor:
      # *** Energy shields ***
      ARMOR_ENERGY_SHIELD_HP_PER_TURN: int
      ARMOR_ENERGY_SHIELD_DECAY: int
      # *** Infection ***
      INFECTION_RESIST: int  # reduces infection damage by this as a %
      INFECTION_REDUCTION: int  # reduces infection damage by this as a flat amount
      INFECTION_RESIST_TYPE: int  # bitmask; type of infection the unit resists. 0 = All, 1 = Nurgle, 2 = GSC, 4 = Slaanesh; 3 = Nurgle + GSC, 5 = Nurgle + Slaanesh, 6 = GSC + Slaanesh
      # *** Unit types ***
      UNIT_TYPE_MECHANICAL: int
      UNIT_TYPE_DAEMONIC: int
      UNIT_TYPE_CONSECRATED: int
      UNIT_TYPE_CHAOS: int
      UNIT_TYPE_PSYKER: int
      UNIT_TYPE_NULL: int
      UNIT_TYPE_TYRANID: int
      UNIT_TYPE_LIVING: int
      UNIT_TYPE_TZEENTCH: int
      UNIT_TYPE_KHORNE: int
      UNIT_TYPE_SLAANESH: int
      UNIT_TYPE_NURGLE: int
      UNIT_TYPE_XENO: int
      UNIT_TYPE_ELDAR: int
      UNIT_TYPE_IMPERIUM: int
      UNIT_TYPE_ORK: int
      UNIT_TYPE_NECRON: int
      UNIT_TYPE_DECOY: int
      UNIT_TYPE_MUTANT: int
      # *** Intimidation ***
      INTIMIDATION_RESISTANCE: int  # Reduces the effectiveness of Intimidate attacks by this percentage
      # *** Bomberman scripts ***
      ARMOR_IS_EXPLODE_ON_DEATH: int  # do we check this unit on death for bombs to activate?
      ARMOR_IS_KAMIKAZI: int  # do we kamikazi when we hit regardless of the weapon used?
      ARMOR_IS_DUMMY: int  # is this a dummy we immediately kill off and trigger the bomb for?
      ARMOR_IS_EXPLODE_ON_DEATH_MELEE_BYPASS: int  # if true, melee type damage bypasses the self-destruct
      # *** Reinforcement TU scripts ***
      ARMOR_REINFORCEMENT_TU_PERCENT: int  # this is the % of TUs the unit spawns with; if unspecified, defaults to 25% of max.
      # *** Dodge bypass scripts ***
      ARMOR_DODGE_CHANCE_PERCENT_REDUCTION: int
      # *** Diehard ***
      UNIT_IS_DIEHARD: int  # is the unit diehard?
      DIEHARD_MODIFIER: int  # adds or subtracts from the unit's diehard chance
      DIEHARD_TEMP_MODIFIER_INCREMENT: int  # how much the temp modifier goes up each time diehard is triggered since the start of our last turn.
      DIEHARD_THRESHOLD: int  # overkill beyond this number cannot be negated by diehard
      # *** Misc ***
      YTAG_DAMAGE_RETURNED_AS_HP_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_ENERGY_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_TIME_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_MORALE_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_STUN_BUFF: int
      YTAG_DAMAGE_RETURNED_RESIST_TYPE_ARMOR: int
      ARMOR_GAINS_PSISKILL_SECONDARY_EXPERIENCE: int
      ARMOR_REGENERATES_WOUNDS: int
      # *** Alpha Legion Scripts ***
      ARMOR_ALPHA_ATTACKER_BONUS_MODIFIER: int  # attacker armor property; modifies the final modifier by this as a percent after all other modifiers; -1 means no chance of triggering
      ARMOR_ALPHA_TARGET_VALUE_MODIFIER: int  # target armor property; modifies the final modifier by this as a percent after all other modifiers; -1 means no chance of triggering
      # *** Limited Flight Scripts ***
      MaxFlight: int
      MaxCooldown: int
      # *** Overwatch Scripts ***
      ARMOR_OVERWATCH_TU_RESTORED: int  # 0 to 100; what % of the unit's maximum TUs is restored at the start of each enemy/neutral turn?
      ARMOR_OVERWATCH_RESTORATION_CUMULATIVE: int  # 1 or 0, True or False; Do we add the % of max TUs restored, or go with the highest value?
      # *** Possession Transformation Scripts ***
      UNIT_POSSESSION_MANIFESTATION_CHANCE: int #the base % chance of manifesting
      UNIT_POSSESSION_TYPE: int #what type of unit we produce
      # *** CAS Scripts ***
      UNIT_IS_CAS_STRIKE: int #Unit counts as a CAS strike designator for the purposes of scripts
      UNIT_IS_INVULNERABLE: int #All hits to the unit are nullified
      # *** Stealth and Infiltration Scripts ***
      ARMOR_IS_INFILTRATOR: int  # does this armor allow us to infiltrate?
      ARMOR_RESTEALTH_KILL_REQUIREMENT: int  # how many kills do we need to restealth with this character?
      ARMOR_RESTEALTH_TURN_REQUIREMENT: int  # how many turns cooldown do we need to restealth with this character
      ARMOR_MOVEMENT_BREAKS_STEALTH: int #does movement break stealth? If so, how many tiles do we need to move from our turn start position?
      ARMOR_IS_DEEP_STRIKE: int  # does this armor allow us to deep strike? WIP


    RuleSoldierBonus:
      BONUS_ENERGY_SHIELD_HP_PER_TURN: int
      BONUS_ENERGY_SHIELD_DECAY: int
      BONUS_BIONICS: int


    RuleItem:
      # *** Intimidation ***
      INTIMIDATION_TU_DAMAGE_MULTIPLIER: int  # TU damage multiplier 100 = baseline
      INTIMIDATION_MORALE_DAMAGE_MULTIPLIER: int  # morale damage multiplier 100 = baseline
      INTIMIDATION_STUN_DAMAGE_MULTIPLIER: int  # stun damage multiplier 100 = baseline
      # *** Reaction modifier tags ***
      REACTION_MULTIPLIER: int  # multiplies base reaction score by this amount divided by 100
      REACTION_FLAT_BONUS_OR_PENALTY: int  # increases or decreases base reaction score by this amount
      # *** Tags for shield penetrating on weapon ***
      ITEM_ENERGY_SHIELD_PENETRATION_PERCENT: int
      ITEM_ENERGY_SHIELD_PENETRATION_FLAT_AMOUNT: int
      ITEM_ENERGY_SHIELD_REDUCTION_PERCENT: int
      ITEM_ENERGY_SHIELD_REDUCTION_FLAT_AMOUNT: int
      ITEM_ENERGY_SHIELD_IGNORE_TYPE_BYPASS: int  # overrides damage type bypassing if true
      # *** Infection system tags ***
      INFECTION_DAMAGE_FLAT: int  # if 0 uses damage dealt
      INFECTION_DAMAGE_PERCENT: int  # inflicts % of damage dealt as infection damage
      INFECTION_TYPE: int  # the type of infection. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh 4: Tzeentch
      # *** Bomb/kamikazi scripts ***
      ITEM_IS_BOMB: int
      ITEM_IS_BOMB_ON_DEATH: int  # does this blow up on death?
      ITEM_IS_RANDOM_FUSE: int  # sets the fuse to a random value between 0 and ITEM_RANDOM_FUSE values.
      # *** Vampiric on kill; weapons ***
      TAG_HP_RETURNED_ON_KILL: int
      TAG_ENERGY_RETURNED_ON_KILL: int
      TAG_TIME_RETURNED_ON_KILL: int
      TAG_MORALE_RETURNED_ON_KILL: int
      TAG_STUN_RETURNED_ON_KILL: int
      # *** Vampiric on damage; weapons ***
      YTAG_DAMAGE_RETURNED_AS_HP: int
      YTAG_DAMAGE_RETURNED_AS_ENERGY: int
      YTAG_DAMAGE_RETURNED_AS_TIME: int
      YTAG_DAMAGE_RETURNED_AS_MORALE: int
      YTAG_DAMAGE_RETURNED_AS_STUN: int
      YTAG_DAMAGE_RETURNED_RESIST_TYPE: int
      # *** Misc ***
      ITEM_DOESNT_HURT_USER: int
      TURRET_RELOAD_TURNS: int  # number of full turns it takes the weapon to reload
      ITEM_COLOR_CHANGES_WITH_AMMO_NON_GRAY: int
      ITEM_AMMO_COLOR: int
      ITEM_AMMO_SHADE: int
      ITEM_STRENGTH_REQUIREMENT: int
      ITEM_AUTO_FLAT_POWER_BONUS: int
      ITEM_SNAP_FLAT_POWER_BONUS: int
      ITEM_AIMED_FLAT_POWER_BONUS: int
      ITEM_MELEE_POWER_BONUS: int
      ITEM_AIMED_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies as a damage bonus; used for precision weapons like sniper rifles
      ITEM_SNAP_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies as a damage bonus; used for precision weapons like sniper rifles
      ITEM_AUTO_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies as a damage bonus; used for precision weapons like sniper rifles
      ITEM_POWER_BONUS_PERCENTILE: int  # 0-2+; if 0 we just add the flat bonus and add the % of applicable firing accuracy as bonus power. If 1, we apply the bonuses as a percentile bonus of the attack power. If 2+, we do both.
      ITEM_AMMO_REPEATED_ACCURACY_FALLOFF_MULTIPLIER: int
      ITEM_RECOIL: int
      ITEM_HAS_BIPOD: int
      ITEM_IS_HEAVY_WEAPON: int  # infantry but not mounted/vehicle heavy weapons
      ITEM_DAMAGE_PERCENT_VS_MECHANICAL: int
      ITEM_IS_BUFF_WEAPON: int
      DAMAGETYPE_OVERRIDE: int
      ITEM_IS_VOX_WEAPON: int
      ITEM_IS_VOX_DUMMY: int
      ITEM_AMMO_SKIP_BIGOBS: int
      ITEM_BLESS_MELEE_ACCURACY: int
      ITEM_BLESS_FIRING_ACCURACY: int
      ITEM_DOES_KILL_USER: int
      ITEM_DOESNT_HURT_FRIENDS: int
      ITEM_IS_TOOL: int
      DODGE_CHANCE_PERCENT_REDUCTION: int
      ITEM_IS_STR_BONEHEAD_ORDERS: int
      TURRET_RELOAD_CAPACITY: int  # reload capacity of turret
      # *** Perils of the Warp ***
      ITEM_IS_PSYCHIC_POWER: int  # is this item a psychic power/spell?
      ITEM_PSYCHIC_POWER_MODIFIER: int  # increments UNIT_PERILS_MODIFIER or our risk of perils by this much per use
      ITEM_PSYCHIC_POWER_FLAT_CHECK: int  # if we only check for perils once per turn
      # *** Autopriming Scripts ***
      MUNITION_DELAY: int  # number of to prime the munition's delay to; -1 sets it to 0. -2 activates the fuse only
      # *** CAS Scripts ***
      ITEM_IS_AIRSTRIKE_DESIGNATOR_2: int #counts as a CAS item for the purposes of scripts

    RuleSkill:
      # *** Misc ***
      SKILL_MIRACLE_ID: int
      SKILL_COMMAND_ID: int
      SKILL_BONEHEAD_ORDER_ID: int
      # *** Stealth and Infiltration Scripts ***
      SKILL_LIKE_FIGHTING_A_SHADOW_ID: int
      SKILL_LIKE_FIGHTING_A_SHADOW_RESTEALTH_DURATION: int
      SKILL_ACTIVATE_CAMO_CLOAK_ID: int
      SKILL_ACTIVATE_CAMO_CLOAK_RESTEALTH_DURATION: int
      # *** Dig In ***
      DigIn: int

    BattleUnit:
      # *** Tags for handling energy shields on units ***
      UNIT_ENERGY_SHIELD_HP: int
      UNIT_ENERGY_SHIELD_DECAY: int
      # *** Diehard ***
      DIEHARD_TEMP_MODIFIER: int  # our cumulative penalty to diehard triggers since the start of our last turn
      # *** Misc ***
      SOLDIER_BLESS_CURRENT_MELEE_BONUS: int
      SOLDIER_BLESS_CURRENT_FIRING_BONUS: int
      SOLDIER_BLESS_CORRUPTION_RESISTANCE: int
      SOLDIER_IS_FANATIC: int
      # *** Perils of the Warp ***
      UNIT_PERILS_MODIFIER: int  # our cumulative increase to perils of the warp
      # *** Dig In ***
      TimesHit: int
      DugInBonus: int
      LocX: int
      LocY: int
      LocZ: int
      UNIT_DIG_IN_MOVE_PENALTY: int #records the move penalty for compatibility with camo cloak stealth
      # *** Dodge ***
      LAST_DODGE_FRAME: int
      DODGED: int
      UNIT_COUNTER_SUCCESSFUL_DODGES: int
      # *** Stealth and Infiltration Scripts ***
      UNIT_STEALTH_IS_ACTIVE: int  # is stealth mode currently active? If so, for how many turns?
      UNIT_LIKE_A_SHADOW_COUNTER: int  # keeps track of the number of kills this unit has to activate Like Fighting A Shadow
      UNIT_STEALTH_CHARGE_TURN_COUNTER: int #how many turns have we been charging our stealth?
      UNIT_CAMO_CLOAK_MOVE_COST_MULTIPLIER: int #move multiplier while the Camo Cloak is active

    RuleSoldier:
      # *** Bonehead orders ***
      SOLDIER_BONEHEAD_OGRYN_CAN_BE_ORDERED: int
      SOLDIER_BONEHEAD_OGRYN_CAN_ISSUE_ORDERS: int
      SOLDIER_BONEHEAD_OGRYN_CURRENT_GIVEN_ORDER: int
      # *** Tag for reducing wound time after battle ***
      SOLDIER_WOUND_TIME_MULTIPLIER: int
      # *** Misc ***
      SOLDIER_CAN_BE_TRAITOR: int
      SOLDIER_COMMAND_POINTS: int
      SOLDIER_IS_LONE_WOLF: int

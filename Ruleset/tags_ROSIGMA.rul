extended:
  tags:

    RuleArmor:
      # *** Energy shields ***
      ARMOR_ENERGY_SHIELD_HP_PER_TURN: int
      ARMOR_ENERGY_SHIELD_DECAY: int
      # *** Unit types ***
      UNIT_TYPE_MECHANICAL: int
      UNIT_TYPE_DAEMONIC: int
      UNIT_TYPE_CONSECRATED: int
      UNIT_TYPE_CHAOS: int
      UNIT_TYPE_PSYKER: int
      UNIT_TYPE_NULL: int
      UNIT_TYPE_TYRANID: int
      UNIT_TYPE_SYNAPSE: int
      UNIT_TYPE_LIVING: int
      UNIT_TYPE_TZEENTCH: int
      UNIT_TYPE_KHORNE: int
      UNIT_TYPE_SLAANESH: int
      UNIT_TYPE_NURGLE: int
      UNIT_TYPE_XENO: int
      UNIT_TYPE_ELDAR: int
      UNIT_TYPE_IMPERIUM: int
      UNIT_TYPE_IMPERIAL_GUARD: int
      UNIT_TYPE_ORK: int
      UNIT_TYPE_NECRON: int
      UNIT_TYPE_DECOY: int
      UNIT_TYPE_MUTANT: int
      UNIT_TYPE_TAU: int
      UNIT_TYPE_SWARM: int
      # *** Grav Bonus Damage Scripts: ROSIGMA_dU_grav_damage_bonus
      UNIT_SIZE: int #size modifier; mostly used as multiplier for grav weapons; if undefined defaults to 100. Tiny Enemies (Nurgling, Scarab): 25 Small Enemies (Squat, Plague Toad, Plague Flies): 50 Large Enemies (Space Marine, Ogryn): 150 Huge Enemies (Terminators, Saturnine): 200
      # *** Intimidation ***
      INTIMIDATION_RESISTANCE: int  # Reduces the effectiveness of Intimidate attacks by this percentage
      # *** Reinforcement TU scripts ***
      ARMOR_REINFORCEMENT_TU_PERCENT: int  # this is the % of TUs the unit spawns with; if unspecified, defaults to 25% of max.
      # *** Dodge Script ***
      DODGE_CHANCE: int
      FLIGHT_DODGE_CHANCE: int
      ARMOR_MAX_SUCCESSFUL_DODGES: int
      ARMOR_DODGE_CHANCE_DECLINE_PER_SUCCESS: int  # how much our chance to dodge decreases with each successful dodge
      ARMOR_DODGE_CHANCE_PERCENT_REDUCTION: int
      ARMOR_DODGE_CHANCE_FLAT_REDUCTION: int
      # *** Diehard ***
      UNIT_IS_DIEHARD: int  # is the unit diehard?
      DIEHARD_MODIFIER: int  # adds or subtracts from the unit's diehard chance
      DIEHARD_TEMP_MODIFIER_INCREMENT: int  # how much the temp modifier goes up each time diehard is triggered since the start of our last turn.
      DIEHARD_THRESHOLD: int  # overkill beyond this number cannot be negated by diehard
      # *** Misc ***
      YTAG_DAMAGE_RETURNED_AS_HP_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_ENERGY_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_TIME_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_MORALE_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_STUN_BUFF: int
      YTAG_DAMAGE_RETURNED_AS_MANA_BUFF: int
      YTAG_DAMAGE_RETURNED_RESIST_TYPE_ARMOR: int
      ARMOR_GAINS_PSISKILL_SECONDARY_EXPERIENCE: int
      # *** Alpha Legion Scripts ***
      ARMOR_ALPHA_ATTACKER_BONUS_MODIFIER: int  # attacker armor property; modifies the final modifier by this as a percent after all other modifiers; -1 means no chance of triggering
      ARMOR_ALPHA_TARGET_VALUE_MODIFIER: int  # target armor property; modifies the final modifier by this as a percent after all other modifiers; -1 means no chance of triggering
      # *** Limited Flight Scripts ***
      MaxFlight: int
      MaxCooldown: int
      # *** Overwatch Scripts ***
      ARMOR_OVERWATCH_TU_RESTORED: int  # 0 to 100; what % of the unit's maximum TUs is restored at the start of each enemy/neutral turn?
      ARMOR_OVERWATCH_RESTORATION_CUMULATIVE: int  # 1 or 0, True or False; Do we add the % of max TUs restored, or go with the highest value?
      # *** Possession Transformation Scripts ***
      UNIT_POSSESSION_MANIFESTATION_CHANCE: int #the base % chance of manifesting
      UNIT_POSSESSION_TYPE: int #what type of unit we produce
      # *** CAS Scripts ***
      UNIT_IS_CAS_STRIKE: int #Unit counts as a CAS strike designator for the purposes of scripts
      UNIT_IS_INVULNERABLE: int #All hits to the unit are nullified
      # *** Stealth and Infiltration Scripts ***
      ARMOR_IS_INFILTRATOR: int  # does this armor allow us to infiltrate?
      ARMOR_RESTEALTH_KILL_REQUIREMENT: int  # how many kills do we need to restealth with this character?
      ARMOR_RESTEALTH_TURN_REQUIREMENT: int  # how many turns cooldown do we need to restealth with this character
      ARMOR_MOVEMENT_BREAKS_STEALTH: int #does movement break stealth? If so, how many tiles do we need to move from our turn start position?
      ARMOR_STEALTH_DETECTION_RANGE: int #while stealthed, how close do units have to be to detect the unit wearing this armor? If not defined, the unit cannot be seen at all.
      ARMOR_IS_DEEP_STRIKE: int  # does this armor allow us to deep strike? WIP
      # *** Infection/Corruption Scripts ***
      INFECTION_RESIST: int  # reduces infection damage by this as a %
      INFECTION_REDUCTION: int  # reduces infection damage by this as a flat amount
      INFECTION_RESIST_TYPE: int  # bitmask; type of infection the unit resists. 0 = All, 1 = Nurgle, 2 = GSC, 4 = Slaanesh; 3 = Nurgle + GSC, 5 = Nurgle + Slaanesh, 6 = GSC + Slaanesh
      # *** Bomberman/Kamikazi Scripts
      ARMOR_IS_EXPLODE_ON_DEATH: int  # do we check this unit on death for bombs to activate? If > 1 we don't trigger on lethal damage; mainly for relying on native selfDestruct
      ARMOR_IS_KAMIKAZI: int  # do we kamikazi when we hit regardless of the weapon used?
      ARMOR_FORCE_DEATH_ON_KAMIKAZI: int  # do we force a death if we kamikazi?
      ARMOR_IS_DUMMY: int  # is this a dummy we immediately kill off and trigger the bomb for?
      ARMOR_IS_EXPLODE_ON_DEATH_MELEE_BYPASS: int  # if true, melee type damage bypasses the self-destruct
      # *** Regeneration Armor/Scripts: scripts_psi_mend_wounds
      ARMOR_REGENERATES_WOUNDS: int  # do we regenerate wounds? If so, how many?
      ARMOR_REGENERATES_HEALTH: int  # does this armor regenerate health? Yes/no
      ARMOR_HEALTH_REGENERATE_DYNAMIC_CEILING_PERCENT: int # is the max health % we can regenerate proportionate to our lost health?
      ARMOR_HEALTH_REGENERATE_CEILING_PERCENT: int  # what's the max % we can regenerate up to?
      ARMOR_HEALTH_REGENERATE_FLAT_AMOUNT: int # regenerate this fixed amount of health each turn
      ARMOR_HEALTH_REGENERATE_PERCENTAGE_AMOUNT_CURRENT_HP: int #regenerate this % of our current HP
      ARMOR_HEALTH_REGENERATE_PERCENTAGE_AMOUNT_MAX_HP: int #regenerate this % of our max HP
      ARMOR_PSI_REGENERATE_DIVISOR: int  # what we divide our psi by; lower is better; recommend at least 1000.
      ARMOR_HEALTH_PER_WOUND_REGENERATED: int
      ARMOR_WOUND_TIME_MULTIPLIER: int  # what percent do we multiply our wound recovery time by?
      # *** Tau Markerlight: ROSIGMA_hU_markerlight_damage_bonus
      HAS_MARKERLIGHT: int #this unit marks whatever it hits for 1 turn.
      # *** Necron Tenacious Scripts
      ARMOR_TENACIOUS_HP_MOD: int
      ARMOR_TENACIOUS_STUN_RECOVERY: int
      # *** Simple Timed Death
      UNIT_TURNS_UNTIL_DEATH: int

    RuleSoldierBonus:
      BONUS_ENERGY_SHIELD_HP_PER_TURN: int
      BONUS_ENERGY_SHIELD_DECAY: int
      BONUS_BIONICS: int

    RuleItem:
      # *** Intimidation ***
      INTIMIDATION_TU_DAMAGE_MULTIPLIER: int  # TU damage multiplier 100 = baseline
      INTIMIDATION_MORALE_DAMAGE_MULTIPLIER: int  # morale damage multiplier 100 = baseline
      INTIMIDATION_STUN_DAMAGE_MULTIPLIER: int  # stun damage multiplier 100 = baseline
      # *** Reaction modifier tags ***
      REACTION_MULTIPLIER: int  # multiplies base reaction score by this amount divided by 100
      REACTION_FLAT_BONUS_OR_PENALTY: int  # increases or decreases base reaction score by this amount
      # *** Tags for shield penetrating on weapon ***
      ITEM_ENERGY_SHIELD_PENETRATION_PERCENT: int
      ITEM_ENERGY_SHIELD_PENETRATION_FLAT_AMOUNT: int
      ITEM_ENERGY_SHIELD_REDUCTION_PERCENT: int
      ITEM_ENERGY_SHIELD_REDUCTION_FLAT_AMOUNT: int
      ITEM_ENERGY_SHIELD_IGNORE_TYPE_BYPASS: int  # overrides damage type bypassing if true
      # *** Dodge Script ***
      DODGE_CHANCE_FLAT_REDUCTION: int
      DODGE_CHANCE_PERCENT_REDUCTION: int
      # *** Vampiric on kill; weapons ***
      TAG_HP_RETURNED_ON_KILL: int
      TAG_ENERGY_RETURNED_ON_KILL: int
      TAG_TIME_RETURNED_ON_KILL: int
      TAG_MORALE_RETURNED_ON_KILL: int
      TAG_STUN_RETURNED_ON_KILL: int
      TAG_MANA_RETURNED_ON_KILL: int
      # *** Vampiric on damage; weapons ***
      YTAG_DAMAGE_RETURNED_AS_HP: int
      YTAG_DAMAGE_RETURNED_AS_ENERGY: int
      YTAG_DAMAGE_RETURNED_AS_TIME: int
      YTAG_DAMAGE_RETURNED_AS_MORALE: int
      YTAG_DAMAGE_RETURNED_AS_STUN: int
      YTAG_DAMAGE_RETURNED_AS_MANA: int
      YTAG_DAMAGE_RETURNED_RESIST_TYPE: int
      # *** Plasma Heat Scripts ***
      ITEM_HEAT_MAX_LEVEL: int
      ITEM_HEAT_DISSIPATION_PER_TURN: int
      ITEM_HEAT_AMMO_SPENT_FOR_INCREASE: int
      ITEM_OVERHEAT_DAMAGE: int  # how much damage we apply on average direct to the target's HP.
      # *** Damage Modifier Scripts ***
      ITEM_SNAP_FLAT_POWER_BONUS: int  # value added to Snap power as a flat number
      ITEM_SNAP_FLAT_POWER_BONUS_PERCENT: int  # value added to Snap power as a % multipler
      ITEM_SNAP_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies to Snap power as a flat damage bonus; used for precision weapons like sniper rifles
      ITEM_SNAP_ACCURACY_POWER_BONUS_PERCENT: int  # percent of the user's Firing Accuracy that applies to Snap power as a multiplier; used for precision weapons like sniper rifles
      ITEM_AUTO_FLAT_POWER_BONUS: int  # value added to Auto power as a flat number
      ITEM_AUTO_FLAT_POWER_BONUS_PERCENT: int  # value added to Auto power as a % multipler
      ITEM_AUTO_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies to Auto power as a flat damage bonus; used for precision weapons like sniper rifles
      ITEM_AUTO_ACCURACY_POWER_BONUS_PERCENT: int  # percent of the user's Firing Accuracy that applies to Auto power as a multiplier; used for precision weapons like sniper rifles
      ITEM_AIMED_FLAT_POWER_BONUS: int  # value added to Aimed power as a flat number
      ITEM_AIMED_FLAT_POWER_BONUS_PERCENT: int  # value added to Aimed power as a % multipler
      ITEM_AIMED_ACCURACY_POWER_BONUS: int  # percent of the user's Firing Accuracy that applies to Aimed power as a flat damage bonus; used for precision weapons like sniper rifles
      ITEM_AIMED_ACCURACY_POWER_BONUS_PERCENT: int  # percent of the user's Firing Accuracy that applies to Aimed power as a multiplier; used for precision weapons like sniper rifles
      ITEM_MELEE_POWER_BONUS: int
      # *** Misc ***
      ITEM_DOESNT_HURT_USER: int
      TURRET_RELOAD_TURNS: int  # number of full turns it takes the weapon to reload
      ITEM_COLOR_CHANGES_WITH_AMMO_NON_GRAY: int
      ITEM_AMMO_COLOR: int
      ITEM_AMMO_SHADE: int
      ITEM_STRENGTH_REQUIREMENT: int
      ITEM_AMMO_REPEATED_ACCURACY_FALLOFF_MULTIPLIER: int
      ITEM_RECOIL: int
      ITEM_HAS_BIPOD: int
      ITEM_IS_HEAVY_WEAPON: int  # infantry but not mounted/vehicle heavy weapons
      ITEM_DAMAGE_PERCENT_VS_MECHANICAL: int
      ITEM_IS_BUFF_WEAPON: int
      ITEM_BYPASSES_LONE_WOLF: int
      DAMAGETYPE_OVERRIDE: int
      ITEM_IS_VOX_WEAPON: int
      ITEM_IS_VOX_DUMMY: int
      ITEM_AMMO_SKIP_BIGOBS: int
      ITEM_BLESS_MELEE_ACCURACY: int
      ITEM_BLESS_FIRING_ACCURACY: int
      ITEM_DOES_KILL_USER: int
      ITEM_DOESNT_HURT_FRIENDS: int
      ITEM_IS_TOOL: int
      ITEM_IS_STR_BONEHEAD_ORDERS: int
      TURRET_RELOAD_CAPACITY: int  # reload capacity of turret
      # *** Perils of the Warp ***
      ITEM_IS_PSYCHIC_POWER: int  # is this item a psychic power/spell?
      ITEM_PSYCHIC_POWER_MODIFIER: int  # increments UNIT_PERILS_MODIFIER or our risk of perils by this much per use
      ITEM_PSYCHIC_POWER_FLAT_CHECK: int  # if we only check for perils once per turn
      # *** Autopriming Scripts ***
      MUNITION_DELAY: int  # number of to prime the munition's delay to; -1 sets it to 0. -2 activates the fuse only
      # *** CAS Scripts ***
      ITEM_IS_AIRSTRIKE_DESIGNATOR_2: int #counts as a CAS item for the purposes of scripts
      # *** Infection/Corruption Scripts ***
      INFECTION_DAMAGE_FLAT: int  # if 0 uses damage dealt
      INFECTION_DAMAGE_PERCENT: int  # inflicts % of damage dealt as infection damage
      INFECTION_TYPE: int  # the type of infection. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh 4: Tzeentch
      # *** Dummy Munitions
      ITEM_IS_DUMMY_MUNITION: int # 0s out all damage
      ITEM_DUMMY_HEALTH_DAMAGE_PERCENT: int # Changes the health damage percent to this value; used to trick the AI. -1 0s out health damage.
      # *** Bomberman/Kamikazi Scripts
      ITEM_IS_KAMIKAZI_TRIGGER: int  # does attacking with this trigger bombs to activate? If this is 2 then the triggering attack will deplete all remaining TU
      ITEM_IS_BOMB: int  # does this blow up with manual activation? The bomb fuse timer is equal to this value - 1.
      ITEM_IS_BOMB_ON_DEATH: int  # does this blow up on death? The bomb fuse timer is equal to this value - 1.
      ITEM_IS_RANDOM_FUSE: int  # sets the fuse to a random value between 0 and ITEM_RANDOM_FUSE values.
      ITEM_IS_KAMIKAZI_BOMB: int  # damage from this will kill the source if they have the Kamikazi armor tag.
      # *** Regeneration Armor/Scripts: scripts_psi_mend_wounds
      ITEM_MENDS_WOUNDS: int
      ITEM_MEND_HEAL_CAP_PERCENT: int  # max % this heals up to
      ITEM_MEND_HARMS_ENEMIES: int
      ITEM_MEND_STUN_PERCENT: int  # percent of rolled power removed from target stun
      ITEM_MEND_ENERGY_PERCENT: int  # percent of rolled power removed from target energy
      ITEM_MEND_TIME_PERCENT: int  # percent of rolled power removed from target TU
      # *** Armor Penetration Armor/Scripts: scripts_resist_penetration
      DAMAGE_RESIST_PENETRATION_PERCENT: int #what percent of the target's % damage reduction from resistance we ignore.
      DAMAGE_RESIST_PENETRATION_FLAT: int #we reduce the target's % damage reduction by this flat amount
      # *** Mindfray
      ITEM_IS_MINDFRAY: int
      # *** Ammo Regen
      ITEM_REGENS_AMMO_PER_TURN: int
      # Eversor Skills
      ITEM_IS_EVERSOR_DEATH_BOMB: int # death bomb used for Eversor skills
      # Shield Scripts
      ITEM_EFFECT_DURATION: int # effect duration
      # Vindicare Skills
      ITEM_IS_EXITUS_RIFLE: int # is this an Exitus Rifle?


    RuleSkill:
      # *** Misc ***
      SKILL_BONEHEAD_ORDER_ID: int
      # *** Stealth and Infiltration Scripts ***
      SKILL_LIKE_FIGHTING_A_SHADOW_ID: int
      SKILL_LIKE_FIGHTING_A_SHADOW_RESTEALTH_DURATION: int
      SKILL_ACTIVATE_CAMO_CLOAK_ID: int
      SKILL_ACTIVATE_CAMO_CLOAK_RESTEALTH_DURATION: int
      # *** Dig In ***
      DigIn: int
      # *** Sisters of Battle Miracles ***
      SKILL_MIRACLE_ID: int
      # *** Commissar Execution Scripts ***
      SKILL_COMMISSAR_EXECUTION_MODE_ID: int
      # *** Imperial Guard Command Scripts ***
      SKILL_COMMAND_ID: int
      # *** GK Skill Teleporation Scripts ***
      SKILL_IS_TELEPORTER: int
      SKILL_TELEPORTER_COOLDOWN: int
      SKILL_TELEPORTER_ENERGY: int
      SKILL_TU_COST: int
      SKILL_MUNITION_COST: int
      # Eversor Skills
      SKILL_EVERSOR_FRENZY_ID: int
      SKILL_EVERSOR_DEATHBOMB_ACTIVATE_ID: int
      # Culexus Skills
      SKILL_CULEXUS_HORROR_STORM_ID: int
      # Vindicare Skills
      SKILL_VINDICARE_KILLSHOT_ID: int

    BattleUnit:
      # *** Tags for handling energy shields on units ***
      UNIT_ENERGY_SHIELD_HP: int
      UNIT_ENERGY_SHIELD_DECAY: int
      # *** Dodge Script ***
      LAST_DODGE_FRAME: int
      DODGED: int
      UNIT_COUNTER_SUCCESSFUL_DODGES: int
      # *** Diehard ***
      DIEHARD_TEMP_MODIFIER: int  # our cumulative penalty to diehard triggers since the start of our last turn
      # *** Misc/Blessings ***
      SOLDIER_BLESS_CURRENT_MELEE_BONUS: int
      SOLDIER_BLESS_CURRENT_FIRING_BONUS: int
      SOLDIER_BLESS_CORRUPTION_RESISTANCE: int
      SOLDIER_IS_FANATIC: int
      # *** Perils of the Warp ***
      UNIT_PERILS_MODIFIER: int  # our cumulative increase to perils of the warp
      # *** Dig In ***
      TimesHit: int
      DugInBonus: int
      LocX: int
      LocY: int
      LocZ: int
      UNIT_DIG_IN_MOVE_PENALTY: int #records the move penalty for compatibility with camo cloak stealth
      # *** Stealth and Infiltration Scripts ***
      UNIT_STEALTH_IS_ACTIVE: int  # is stealth mode currently active? If so, for how many turns?
      UNIT_LIKE_A_SHADOW_COUNTER: int  # keeps track of the number of kills this unit has to activate Like Fighting A Shadow
      UNIT_STEALTH_CHARGE_TURN_COUNTER: int #how many turns have we been charging our stealth?
      UNIT_CAMO_CLOAK_MOVE_COST_MULTIPLIER: int #move multiplier while the Camo Cloak is active
      # *** Sisters of Battle Miracles ***
      UNIT_EXP_BRAVERY: int
      UNIT_EXP_FIRING: int
      UNIT_EXP_MELEE: int
      UNIT_EXP_REACTIONS: int
      UNIT_EXP_THROWING: int
      UNIT_EXP_PSISKILL: int
      UNIT_EXP_PSISTRENGTH: int
      UNIT_EXP_STRENGTH: int
      UNIT_HAS_BEEN_MARTYRED: int
      # *** Infection/Corruption Scripts ***
      CURRENT_INFECTION_DAMAGE: int  # current amount of infection the unit has
      CURRENT_INFECTION_TYPE: int  # type of infection the unit has. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh
      CURRENT_INFECTION_FACTION: int  # the faction that caused the infection; also determines which faction an infection spawned unit aligns with
      LAST_INFECTION_DAMAGE: int  # infection damage accumulated since last start of unit turn
      # *** Regeneration Armor/Scripts: scripts_psi_mend_wounds
      UNIT_LOWEST_HEALTH: int  #the lowest HP we have reached on this mission
      # *** Tau Markerlight: ROSIGMA_hU_markerlight_damage_bonus
      IS_MARKERLIT: int #unit is targeted by a marker light
      # *** Chaos Favor
      UNIT_FAVOR: int
      # *** Mind Fray
      MINDFRAY_COOLDOWN: int
      MINDFRAY_DURATION: int
      # *** Commissar Execution Scripts ***
      UNIT_COMMISSAR_EXECUTION_MODE_ACTIVE: int
      UNIT_MARKED_FOR_EXECUTION: int
      # *** Simple Death Timer ***
      BATTLEUNIT_TURNS_UNTIL_DEATH: int
      # Eversor Scripts
      UNIT_EVERSOR_SUICIDE_MODE_ACTIVE: int
      UNIT_EVERSOR_FRENZY_ACTIVE: int
      # Culexus Scripts
      UNIT_CULEXUS_HORROR_STORM_ACTIVE: int


    RuleSoldier:
      # *** Bonehead orders ***
      SOLDIER_BONEHEAD_OGRYN_CAN_BE_ORDERED: int
      SOLDIER_BONEHEAD_OGRYN_CAN_ISSUE_ORDERS: int
      SOLDIER_BONEHEAD_OGRYN_CURRENT_GIVEN_ORDER: int
      # *** Tag for reducing wound time after battle ***
      SOLDIER_WOUND_TIME_MULTIPLIER: int
      # *** Misc ***
      SOLDIER_CAN_BE_TRAITOR: int
      SOLDIER_IS_LONE_WOLF: int
      # *** Sisters of Battle Miracles ***
      SOLDIER_MIRACLE_POINTS: int
      SOLDIER_IS_SOB: int
      # *** Heretic Sisters ***
      SOLDIER_IS_HSIS: int
      # *** Commissar Execution Scripts ***
      SOLDIER_IS_COMMISSAR: int
      # *** Imperial Guard Command Scripts ***
      SOLDIER_COMMAND_POINTS: int
      # *** Per Mission extra stat gain ***
      SOLDIER_GAINS_EXTRA_STRENGTH: int  # Extra amount gained will be from 1 to the value given

    GeoscapeSoldier:
      # *** Chaos Favor
      GEOSOLDIER_FAVOR: int

    BattleGame:
      # *** Necron Tenacious Scripts ***
      NECRON_RESURRECTION_POWER: int
      # *** Sisters of Battle Miracles ***
      TURN_ACTIVE_MIRACLE: int
      CHOICE_ACTIVE_MIRACLE: int
      MIRACLE_POINTS: int
      TURN_SPIRIT_OF_MARTYR: int
      # *** Infection/Corruption Scripts ***
      RESEARCH_LEVEL_CURE: int
      # *** Commissar Execution Scripts ***
      GUARD_UNIT_EXECUTED: int
      # *** Imperial Guard Command Scripts ***
      TURN_ACTIVE_COMMAND: int
      CHOICE_ACTIVE_COMMAND: int
      COMMAND_POINTS: int
      NUMBER_SOLDIERS: int
      NUMBER_OFFICERS: int

    BattleItem:
      # *** Plasma Heat Scripts ***
      ITEM_HEAT_CURRENT_LEVEL: int
      ITEM_HEAT_PREVIOUS_AMMO_COUNT: int
      ITEM_HEAT_CRITICAL: int  # have we gone critical?
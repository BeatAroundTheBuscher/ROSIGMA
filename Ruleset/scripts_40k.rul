items:
  - type: STR_REPAIR #REPAIR NOT USED
    confMelee:
      name: STR_REPAIR
    size: 0.2
    weight: 5
    bigSprite: 268
    meleeSound: 698
    meleeHitSound: 699
    meleeAnimation: 32
    power: 60
    damageType: 0
    accuracyMelee: 100
    battleType: 3
    twoHanded: false
    invWidth: 2
    invHeight: 3
    armor: 52
    skillApplied: false
    #strengthApplied: true
    fixedWeapon: true
    attraction: 1
    damageAlter: #REPAIR
      RandomType: 7
      ToHealth: 0.0
      ToStun: 0.0
      ToArmor: -1.0
      ToWound: 0.0
      RandomWound: false
      RandomStun: false
      ArmorEffectiveness: 0.0
    flatRate: true
    costMelee:
      time: 15
      energy: 40
    recover: false
    clipSize: -1
    specialUseEmptyHand: true
  - type: STR_ELDAR_LIGHT #PSY
    weight: 0
    bigSprite: 316
    fireSound: [854, 855, 856, 857]
    power: 20
    damageType: 5
    accuracyAimed: 90
    accuracySnap: 70
    confAimed:
      shots: 1
      name: STR_LH
    battleType: 1
    confSnap:
      shots: 1
      name: STR_LH
    costAimed:
      time: 50
      energy: 20
      morale: 10
      stun: 10
    costSnap:
      time: 40
      energy: 20
      morale: 10
      stun: 10
    damageAlter: #LIGHT
      RandomType: 2 #TFTD [50% - 150%]
      ArmorEffectiveness: 0.0
      ToArmorPre: 0.0
      ToArmor: 0.0
      ToHealth: 2.0
      ToStun: 0.2
    invWidth: 2
    invHeight: 3
    clipSize: -1
    bulletSprite: 17
    blastRadius: 1
    explosionHitSound: 864
    hitAnimation: 152
    twoHanded: false
    skillApplied: false
    strengthApplied: false
    recover: false
    fixedWeapon: true
    specialIconSprite: 6
    specialUseEmptyHand: true
  - type: STR_ELDAR_LIGHT_SAFE
    weight: 0
    bigSprite: 316
    fireSound: [854, 855, 856, 857]
    power: 20
    damageType: 5
    accuracyAimed: 90
    confAimed:
      shots: 1
      name: STR_LH
    tuAimed: 50
    battleType: 1
    damageAlter: #LIGHT
      RandomType: 2 #TFTD [50% - 150%]
      ArmorEffectiveness: 0.0
      ToArmorPre: 0.0
      ToArmor: 0.0
      ToHealth: 2.0
      ToStun: 0.2
    invWidth: 2
    invHeight: 3
    clipSize: -1
    bulletSprite: 17
    blastRadius: 1
    explosionHitSound: 864
    hitAnimation: 152
    twoHanded: false
    skillApplied: false
    strengthApplied: false
    recover: false
    fixedWeapon: true
    specialIconSprite: 6
    specialUseEmptyHand: false
  - type: AUX_PROBE                                                 #TOME
    #psiAttackName: STR_ANALYZE #string id of psi-amp attack name in the pop-up menu. Required to enable special attack.
    weight: 0
    hitSound: 37
    battleType: 8
    LOSRequired: true
    tuUse: 5
    recover: false
    fixedWeapon: true
    specialIconSprite: 5
    specialUseEmptyHand: true
    #*** Melee
    tags:
      ITEM_REPAIRS_ARMOR: 1
    confMelee:
      name: STR_REPAIR
    meleeSound: 698
    meleeHitSound: 699
    meleeAnimation: 32
    meleeType: 0
    meleePower: 60
    accuracyMelee: 100
    meleeBonus:
      strength: 0.5
    meleeAlter: #REPAIR
      RandomType: 3
      ToHealth: 0.0
      ToStun: 0.0
      ToArmor: -1.0
      ToWound: 0.0
      RandomWound: false
      RandomStun: false
      ArmorEffectiveness: 0.0
    meleeMultiplier:
      melee: 0.8
    costMelee:
      time: 15
      energy: 40
  - type: STR_MFIST #special
    weight: 0
    bigSprite: 224
    floorSprite: 111
    handSprite: 256
    meleeSound: 710 # 710 powerfist miss
    meleeHitSound: 772 # 772 powerfist hit
    meleeAnimation: 28 # 28 bolt anitmation
    power: 100
    damageAlter:     #DA POWER
      ArmorEffectiveness: 0.7
      ToArmorPre: 0.2
      ToHealth: 0.9
    damageType: 7
    accuracyMelee: 80
    tuMelee: 15
    flatRate: true
    clipSize: -1
    battleType: 3
    twoHanded: false
    skillApplied: true
    strengthApplied: false
    recover: false
    fixedWeapon: true
    specialIconSprite: 4
    specialUseEmptyHand: false
    experienceTrainingMode: 13
  - type: AUX_SEDUCE
    tags:
      ITEM_STUN_ON_LOW_MORALE: 1
    confMelee:
      name: STR_SEDUCE
    weight: 0
    bigSprite: 372
    meleeSound: 834
    meleeHitSound: 833
    meleeAnimation: 52
    power: 200
    damageAlter:
      RandomType: 3 #3-> Flat  [100% - 100%]
      ToStun: 0.5
      ToHealth: 0.0
      ToWound: 0.0
      ToMorale: 1.0
      ToArmor: 0.0
      ArmorEffectiveness: 0.0   #how effective armor is against this damage. Default `0.0` for smoke and stun, `1.0` rest.
    damageType: 7
    accuracyMelee: 110
    tuMelee: 15
    clipSize: -1
    battleType: 3
    twoHanded: false
    invWidth: 2
    invHeight: 3
    recover: false
    fixedWeapon: true
    specialIconSprite: 3
    specialUseEmptyHand: false
  - type: AUX_SEDUCE_MEDIUM
    tags:
      ITEM_STUN_ON_LOW_MORALE: 1
    confMelee:
      name: STR_SEDUCE
    weight: 0
    bigSprite: 372
    meleeSound: 834
    meleeHitSound: 833
    meleeAnimation: 52
    power: 100
    damageAlter:
      RandomType: 3 #3-> Flat  [100% - 100%]
      ToStun: 0.5
      ToHealth: 0.0
      ToWound: 0.0
      ToMorale: 1.0
      ToArmor: 0.0
      ArmorEffectiveness: 0.0   #how effective armor is against this damage. Default `0.0` for smoke and stun, `1.0` rest.
    damageType: 7
    accuracyMelee: 70
    tuMelee: 20
    clipSize: -1
    battleType: 3
    twoHanded: false
    invWidth: 1
    invHeight: 2
    recover: false
    fixedWeapon: true
    specialIconSprite: 3
    specialUseEmptyHand: false
  - type: AUX_SEDUCE_WEAK
    tags:
      ITEM_STUN_ON_LOW_MORALE: 1
    confMelee:
      name: STR_SEDUCE
    weight: 0
    bigSprite: 372
    meleeSound: 834
    meleeHitSound: 833
    meleeAnimation: 52
    power: 70
    damageAlter:
      RandomType: 3 #3-> Flat  [100% - 100%]
      ToStun: 0.5
      ToHealth: 0.0
      ToWound: 0.0
      ToMorale: 1.0
      ToArmor: 0.0
      ArmorEffectiveness: 0.0   #how effective armor is against this damage. Default `0.0` for smoke and stun, `1.0` rest.
    damageType: 7
    accuracyMelee: 50
    tuMelee: 15
    clipSize: -1
    battleType: 3
    twoHanded: false
    invWidth: 1
    invHeight: 2
    recover: false
    fixedWeapon: true
    specialIconSprite: 3
    specialUseEmptyHand: false
  - type: SEDUCE_PSI_WEAPON
    psiSound: 834          #override `hitSound` when used for MC or Panic attack.
    psiMissSound: 0        #override `hitMissSound` when used for MC or Panic attack.
    psiAnimation: 52       #override `meleeAnimation` when used for MC or Panic attack. Use `HIT.PCK`
    psiMissAnimation: 52    #override `meleeMissAnimation` when MC or Panic attack was unsuccessful. Use `HIT.PCK`
    hitSound: 833
    battleType: 9
    tuUse: 25
    flatRate: true
    recover: false
  - type: ALIEN_PSI_WEAPON
    hitSound: 36
    battleType: 9
    tuUse: 25
    flatRate: true
    recover: false
    LOSRequired: true

  - type: STR_HEAVY_STUBBER
    tags:
      ITEM_RECOIL: 30

  - type: STR_HEAVY_STUBBER_CHAOS
    tags:
      ITEM_RECOIL: 30

  - type: STR_BOLTPISTOL_CHAOS
    tags:
      ITEM_RECOIL: 40
      ITEM_HAS_RANDOMIZED_SPRITES: 1
      ITEM_FIRING_SPRITE: 1

  - type: STR_STUB_GUN
    tags:
      ITEM_HAS_RANDOMIZED_SPRITES: 3

  - type: STR_STUB_GUN_CHAOS
    tags:
      ITEM_HAS_RANDOMIZED_SPRITES: 3

  - type: AUX_REPAIR
    tags:
      ITEM_REPAIRS_ARMOR: 1

  - type: STR_SERVITOR
    tags:
      ITEM_REPAIRS_ARMOR: 1

  - type: STR_BOLTER_CANTUS
    tags:
      ITEM_RECOIL: 20
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_DEAZ
    tags:
      ITEM_RECOIL: 25
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_ELOHIM
    tags:
      ITEM_RECOIL: 30
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_HELLSPITE
    tags:
      ITEM_RECOIL: 30
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_DOMINION
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_DEAZ_MC
    tags:
      ITEM_RECOIL: 25
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_ENFORCER
    tags:
      ITEM_RECOIL: 25
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTER_LOCKE
    tags:
      ITEM_RECOIL: 25
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_LIGHT_BOLTER_AMMO
    tags:
      ITEM_AMMO_COLOR: 0

  - type: STR_CANTUS_BOLTER_AMMO
    tags:
      ITEM_AMMO_COLOR: 0

  - type: STR_LIGHT_BOLTER_AMMO_MC
    tags:
      ITEM_AMMO_COLOR: 15

  - type: STR_BOLTERC
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTERN
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTERR
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_RIFLE
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_MCRIFLE
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_RIFLEB
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_RIFLEC
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_RIFLED
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_RIFLE_CLIP
    tags:
      ITEM_AMMO_COLOR: 0

  - type: STR_RIFLE_CLIP_MC
    tags:
      ITEM_AMMO_COLOR: 15

  - type: STR_RIFLE_CLIP_EX
    tags:
      ITEM_AMMO_COLOR: 2

  - type: STR_RIFLE_CLIP_AP
    tags:
      ITEM_AMMO_COLOR: 1

  - type: STR_RIFLE_CLIP_N
    tags:
      ITEM_AMMO_COLOR: 4

  - type: STR_RIFLE_CLIP_R
    tags:
      ITEM_AMMO_COLOR: 13

  - type: STR_HEAVY_STUBBER_SLAAN
    tags:
      ITEM_RECOIL: 30

  - type: STR_LIGHT_BOLTERSLAAN
    tags:
      ITEM_RECOIL: 25
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTERSLAAN
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTERSLAAN_SCOPED
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_LARGE_KOMBIBOLTERSLAAN
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_BOLTPISTOL_DEAZ
    tags:
      ITEM_RECOIL: 20
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_MC_BOLTPISTOL_DEAZ
    tags:
      ITEM_RECOIL: 20
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_LIGHT_BOLTPISTOL_AMMO
    tags:
      ITEM_AMMO_COLOR: 0

  - type: STR_LIGHT_BOLTPISTOL_AMMO_MC
    tags:
      ITEM_AMMO_COLOR: 15

  - type: STR_PISTOL
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_PISTOLB
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_PISTOLS
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_PISTOLH
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      #ITEM_FIRING_SPRITE: 1

  - type: STR_MCPISTOL
    tags:
      ITEM_RECOIL: 40
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
      ITEM_FIRING_SPRITE: 1

  - type: STR_PISTOL_CLIP
    tags:
      ITEM_AMMO_COLOR: 0

  - type: STR_PISTOL_CLIP_MC
    tags:
      ITEM_AMMO_COLOR: 15

  - type: STR_PISTOL_CLIP_EX
    tags:
      ITEM_AMMO_COLOR: 2

  - type: STR_PISTOL_CLIP_AP
    tags:
      ITEM_AMMO_COLOR: 1

  - type: STR_AUTO_CANNON
    tags:
      ITEM_RECOIL: 60

  - type: STR_AUTO_CANNON_RETRIBUTOR
    tags:
      ITEM_RECOIL: 55
      ITEM_FIRING_SPRITE: 1

  - type: STR_AUTO_CANNON_RETRIBUTOR2
    tags:
      ITEM_RECOIL: 50
      ITEM_FIRING_SPRITE: 1

  - type: STR_AUTO_CANNON_POTESTAS
    tags:
      ITEM_RECOIL: 50
      ITEM_FIRING_SPRITE: 1

  - type: STR_AUTO_CANNON_CHAOSRETRIBUTOR
    tags:
      ITEM_RECOIL: 55
      ITEM_FIRING_SPRITE: 1

  - type: STR_HEAVY_BOLTER_GUARD
    tags:
      ITEM_RECOIL: 55

  - type: STR_HEAVY_CANNON
    tags:
      ITEM_RECOIL: 30
      ITEM_COLOR_CHANGES_WITH_AMMO: 15
  - type: STR_HC_AP_AMMO
    tags:
      ITEM_AMMO_COLOR: 0
  - type: STR_HC_HE_AMMO
    tags:
      ITEM_AMMO_COLOR: 1
  - type: STR_HC_I_AMMO
    tags:
      ITEM_AMMO_COLOR: 2

  - type: STR_SNIPER_CHAOS
    tags:
      ITEM_RECOIL: 30
      ITEM_COLOR_CHANGES_WITH_AMMO: 15

  - type: STR_LASCAN
    tags:
      ITEM_RECOIL: 60

  - type: STR_LASCANNON_HANDHELD
    tags:
      ITEM_RECOIL: 60

  - type: STR_HB
    tags:
      ITEM_RECOIL: 75
      ITEM_FIRING_SPRITE: 1

  - type: STR_STORMBOLTER_DEAZ #ROSE MOD
    tags:
      ITEM_RECOIL: 65
      ITEM_FIRING_SPRITE: 1

  - type: STR_HB_MC
    tags:
      ITEM_RECOIL: 75
      ITEM_FIRING_SPRITE: 1

  - type: STR_CHB
    tags:
      ITEM_RECOIL: 75
      ITEM_FIRING_SPRITE: 1

  - type: STR_GK_HB
    tags:
      ITEM_RECOIL: 75

  - type: STR_HFLAMER
    tags:
      ITEM_RECOIL: 100

  - type: STR_ASSC
    tags:
      ITEM_RECOIL: 100

  - type: STR_GALGALIM_ASSCANNON
    tags:
      ITEM_RECOIL: 85

  - type: STR_CASSC
    tags:
      ITEM_RECOIL: 100

  - type: STR_ASSCTZ
    tags:
      ITEM_RECOIL: 100

  - type: STR_AUTOCANNON_HANDHELD
    tags:
      ITEM_RECOIL: 100

  - type: STR_POWERFIST
    tags:
      ITEM_STRENGTH_REQUIREMENT: 40

  - type: STR_CHAINSWORD
    tags:
      ITEM_STRENGTH_REQUIREMENT: 25

  - type: STR_CHAINSWORD_MC
    tags:
      ITEM_STRENGTH_REQUIREMENT: 25

  - type: STR_AXE
    tags:
      ITEM_STRENGTH_REQUIREMENT: 25

  - type: STR_EVISCERATOR
    tags:
      ITEM_STRENGTH_REQUIREMENT: 35

  - type: STR_CPOWER_SWORD
    tags:
      ITEM_STRENGTH_REQUIREMENT: 80

  - type: STR_CPOWER_AXE
    tags:
      ITEM_STRENGTH_REQUIREMENT: 60

  - type: STR_CPOWER_DAGGER
    tags:
      ITEM_STRENGTH_REQUIREMENT: 60

  - type: STR_EPOWER_SWORD
    tags:
      ITEM_STRENGTH_REQUIREMENT: 60

  - type: STR_POWER_SWORD
    tags:
      ITEM_STRENGTH_REQUIREMENT: 100

  - type: STR_POWER_SWORD_MC
    tags:
      ITEM_STRENGTH_REQUIREMENT: 100

  - type: STR_HAMMER
    tags:
      ITEM_STRENGTH_REQUIREMENT: 120

  - type: STR_HAMMER_MC
    tags:
      ITEM_STRENGTH_REQUIREMENT: 120

  - type: STR_HALLEBARD
    tags:
      ITEM_STRENGTH_REQUIREMENT: 120

extended:
  tags:
    RuleArmor:
      ARMOR_TREATS_ALL_WEAPONS_ONE_HANDED: int

    RuleItem:
      ITEM_STUN_ON_LOW_MORALE: int
      ITEM_HAS_RANDOMIZED_SPRITES: int
      ITEM_REPAIRS_ARMOR: int

#*** Tags for reducing accuracy when not enough strength to use a weapon ***
      ITEM_RECOIL: int
      ITEM_HAS_BIPOD: int
      ITEM_STRENGTH_REQUIREMENT: int

#*** Tag for weapons changing colors when a certain clip is loaded ***
      ITEM_COLOR_CHANGES_WITH_AMMO: int
      ITEM_AMMO_COLOR: int
      ITEM_AMMO_SHADE: int

#*** Tag for weapon changing hand sprite when firing ***
      ITEM_FIRING_SPRITE: int

    BattleItem:
      ITEM_RANDOMIZED_SPRITE: int
  scripts:
    damageUnit:
      - offset: 1
        code: |
          var ptr RuleItem itemRuleset;
          var int targetMorale;
          var int stunOnLowMorale;

          damaging_item.getRuleItem itemRuleset;
          itemRuleset.getTag stunOnLowMorale Tag.ITEM_STUN_ON_LOW_MORALE;

          if eq stunOnLowMorale 0;
            return;
          end;

          unit.getMorale targetMorale;
          if neq targetMorale 0;
            set to_stun 0;
          end;

          return;

    createItem:
      - offset: 1
        code: |
          var ptr RuleItem itemRuleset;
          var int randomizedSprite;

          item.getRuleItem itemRuleset;
          itemRuleset.getTag randomizedSprite Tag.ITEM_HAS_RANDOMIZED_SPRITES;
          if neq 0 randomizedSprite;

            battle_game.randomRange randomizedSprite 0 randomizedSprite;
            item.setTag Tag.ITEM_RANDOMIZED_SPRITE randomizedSprite;

          end;

          return;

    selectItemSprite:
      #*** displays randomized bigob sprites for certain weapons ***
      - offset: 0.1
        code: |
          var int randomizedSprite;

          item.getTag randomizedSprite Tag.ITEM_RANDOMIZED_SPRITE;

          if eq blit_part blit_item_big;

            add sprite_index randomizedSprite;

          end;

          return sprite_index;

      #*** gives bolt weapons muzzle flashes ***
      - offset: 0.2
        code: |
          var ptr BattleUnit unit;
          var ptr RuleItem itemRuleset;
          var int itemFiringSprite;
          var int unitIsAiming;

          item.getOwner unit;

          if neq null unit;

            unit.isAiming unitIsAiming;
            item.getRuleItem itemRuleset;
            itemRuleset.getTag itemFiringSprite Tag.ITEM_FIRING_SPRITE;

            if and neq 0 itemFiringSprite neq 0 unitIsAiming;

              if or eq blit_part blit_item_lefthand eq blit_part blit_item_righthand;

                set sprite_offset 8;
                add sprite_index sprite_offset;

              end;

            end;

          end;

          return sprite_index;

    hitUnit:
      - offset: 5
        code: |
          var ptr RuleItem weaponRuleset;
          var int itemRepairsArmor;
          var int currentArmor;
          var int maxArmor;
          var int compareArmor 100;

          weapon_item.getRuleItem weaponRuleset;
          weaponRuleset.getTag itemRepairsArmor Tag.ITEM_REPAIRS_ARMOR;

          if or eq 0 itemRepairsArmor neq battle_action battle_action_hit neq 0 damaging_type;

            return power part side;

          end;

          unit.getArmor currentArmor SIDE_FRONT;
          unit.getArmorMax maxArmor SIDE_FRONT;
          muldiv currentArmor 100 maxArmor;
          if lt currentArmor compareArmor;

            set side SIDE_FRONT;
            set compareArmor currentArmor;

          end;

          unit.getArmor currentArmor SIDE_LEFT;
          unit.getArmorMax maxArmor SIDE_LEFT;
          muldiv currentArmor 100 maxArmor;
          if lt currentArmor compareArmor;

            set side SIDE_LEFT;
            set compareArmor currentArmor;

          end;

          unit.getArmor currentArmor SIDE_RIGHT;
          unit.getArmorMax maxArmor SIDE_RIGHT;
          muldiv currentArmor 100 maxArmor;
          if lt currentArmor compareArmor;

            set side SIDE_RIGHT;
            set compareArmor currentArmor;

          end;

          unit.getArmor currentArmor SIDE_REAR;
          unit.getArmorMax maxArmor SIDE_REAR;
          muldiv currentArmor 100 maxArmor;
          if lt currentArmor compareArmor;

            set side SIDE_REAR;
            set compareArmor currentArmor;

          end;

          unit.getArmor currentArmor SIDE_UNDER;
          unit.getArmorMax maxArmor SIDE_UNDER;
          muldiv currentArmor 100 maxArmor;
          if lt currentArmor compareArmor;

            set side SIDE_UNDER;
            set compareArmor currentArmor;

          end;

          return power part side;

    accuracyMultiplierBonusStats:
      #*** recoil accuracy penalty on firing weapons with not enough strength ***
      - offset: 1
        code: |
          var ptr RuleItem weaponRuleset;
          var ptr BattleItem otherWeapon;
          var int itemRecoil;
          var int weaponHasBipod;
          var int unitIsKneeling;
          var int unitStrength;
          var int accuracyFloor;

          weapon.getRuleItem weaponRuleset;
          weaponRuleset.getTag itemRecoil Tag.ITEM_RECOIL;

          # bipod+kneeling = no recoil
          weaponRuleset.getTag weaponHasBipod Tag.ITEM_HAS_BIPOD;
          unit.isKneeled unitIsKneeling;

          if eq 0 itemRecoil;
            return bonus;
          else and neq 0 weaponHasBipod neq 0 unitIsKneeling;
            return bonus;
          end;

          # lower limit for penalty from recoil is 50% for snap/aimed, 0 for auto
          set accuracyFloor bonus;
          div accuracyFloor 2;

          if eq battle_action BA_AUTOSHOT;

            set accuracyFloor 0;

          end;

          # compare unit strength as percent of the recoil value
          # less than 50% = full penalty
          # 50% to 100% = scaling penalty
          unit.Stats.getStrength unitStrength;
          muldiv unitStrength 100 itemRecoil;

          if lt unitStrength 100;

            # autoshot gets twice the penalty (needs to reach 0 by half strength, not 50%)
            if eq battle_action BA_AUTOSHOT;

              sub unitStrength 50;
              mul unitStrength 2;

            end;

            muldiv bonus unitStrength 100;
            limit_lower bonus accuracyFloor;

          end;

          return bonus;

      #*** ability for some armors to fire two-handed weapons as if one-handed
      - offset: 2
        code: |
          var ptr RuleArmor unitArmor;
          var ptr RuleItem weaponRuleset;
          var ptr BattleItem otherWeapon;
          var int armorTreatsAllWeaponsOneHanded;
          var int weaponIsTwoHanded;

          unit.getRuleArmor unitArmor;
          unitArmor.getTag armorTreatsAllWeaponsOneHanded Tag.ARMOR_TREATS_ALL_WEAPONS_ONE_HANDED;

          unit.getLeftHandWeapon otherWeapon;

          if and neq null otherWeapon eq weapon otherWeapon;

            unit.getRightHandWeapon otherWeapon;

          end;

          weapon.getRuleItem weaponRuleset;
          weaponRuleset.isTwoHanded weaponIsTwoHanded;

          if and neq null otherWeapon neq 0 weaponIsTwoHanded;

            add armorTreatsAllWeaponsOneHanded 100;
            muldiv bonus armorTreatsAllWeaponsOneHanded 100;

          end;

          return bonus;

    meleeMultiplierBonusStats:
      #*** strength requirement penalty on melee weapons ***
      - offset: 1
        code: |
          var ptr RuleItem weaponRuleset;
          var ptr BattleItem otherWeapon;
          var int itemStrengthRequirement;
          var int unitStrength;
          var int accuracyFloor;
          var int weaponIsTwoHanded;

          weapon.getRuleItem weaponRuleset;
          weaponRuleset.getTag itemStrengthRequirement Tag.ITEM_STRENGTH_REQUIREMENT;

          if eq 0 itemStrengthRequirement;
            return bonus;
          end;

          # lower limit for penalty is 50%
          set accuracyFloor bonus;
          div accuracyFloor 2;

          # compare unit strength as percent of the strength requirement value
          # less than 50% = full penalty
          # 50% to 100% = scaling penalty
          unit.Stats.getStrength unitStrength;
          muldiv unitStrength 100 itemStrengthRequirement;

          if lt unitStrength 100;

            muldiv bonus unitStrength 100;
            limit_lower bonus accuracyFloor;

          end;

          return bonus;


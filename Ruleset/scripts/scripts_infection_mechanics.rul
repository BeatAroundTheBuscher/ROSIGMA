# Requires Extended-7.0-ea2092bc5-2021-03-22
# Updated for 7.5.8
# scripts mostly used for nurgle plague

extended:
  tags:
    BattleUnit:
      CURRENT_INFECTION_DAMAGE: int #current amount of infection the unit has
      CURRENT_INFECTION_TYPE: int #type of infection the unit has. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh
      CURRENT_INFECTION_FACTION: int #the faction that caused the infection; also determines which faction an infection spawned unit aligns with
      LAST_INFECTION_DAMAGE: int #infection damage accumulated since last start of unit turn
      SOLDIER_BLESS_CORRUPTION_RESISTANCE: int
    RuleItem:
      INFECTION_DAMAGE_FLAT: int #if 0 uses damage dealt
      INFECTION_DAMAGE_PERCENT: int #inflicts % of damage dealt as infection damage
      INFECTION_TYPE: int #the type of infection. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh 4: Tzeentch
    RuleArmor:
      INFECTION_RESIST: int #reduces infection damage by this as a %
      INFECTION_REDUCTION: int #reduces infection damage by this as a flat amount
      INFECTION_RESIST_TYPE: int #bitmask; type of infection the unit resists. 0 = All, 1 = Nurgle, 2 = GSC, 4 = Slaanesh; 3 = Nurgle + GSC, 5 = Nurgle + Slaanesh, 6 = GSC + Slaanesh
    BattleGame:
      RESEARCH_LEVEL_CURE: int

  scripts:
    returnFromMissionUnit:
      - new: ROSIGMA_rFMU_infections
        offset: 22 # wrack unit
        code: |
          # increases recovery time by infection level
          # penalty is reduced by researchLevel; researchLevel is gained by researching specific topics

          var int infectionDamage;
          var int statsDamage;
          var int researchLevel;
          var int temp;
          var ptr GeoscapeGame geoScape;
          var ptr RuleResearch researchTopic;

          unit.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;
          #if we have no infection, cancel out
          if le infectionDamage 0;
            return;
          end;

          battle_game.getTag researchLevel Tag.RESEARCH_LEVEL_CURE;
          #don't bother checking/setting research levels if we've maxed out research
          if le researchLevel 2;
            #set our research level
            set researchLevel 1;
            battle_game.getGeoscapeGame geoScape;

            rules.getRuleResearch researchTopic "STR_APOC_BAY"; #apothecary bay research
            geoScape.isResearched temp researchTopic;
            if neq temp 0;
              add researchLevel 1;
            end;

            rules.getRuleResearch researchTopic "STR_PSI_LAB"; #chapel research
            geoScape.isResearched temp researchTopic;
            if neq temp 0;
              add researchLevel 1;
            end;
          end;

          #research level 2 halves the effective infection damage
          if eq researchLevel 2;
            div infectionDamage 2;
          end;
          #research level 3 effectively nullifies infection damage
          if eq researchLevel 3;
            mul infectionDamage 0;
          end;

          add recovery_time infectionDamage; #add infection damage to recovery time

          return;

    damageUnit:
      - new: ROSIGMA_dU_infections
        offset: 22 # infect unit
        code: |
          var ptr RuleArmor armorRule;
          var ptr RuleItem itemRule;
          var ptr BattleItem ammoItem;
          var int temp;
          var int infectionDamage; #percent of damage the triggering attack inflicts
          var int infectionDamageFlat; #flat amount of dmaage the triggering attack inflicts
          var int infectionType; #the type of infection. Thus far: 1: Nurgle, 2: GSC, 3: Slaanesh 4: Tzeentch
          var int currentInfectionType; #the victim's current infection type if any
          var int currentInfectionDamage; #the victim's current infection damage if any
          var int infectionPercentage; #what percentage of damage dealt accrues as infection
          var int infectionResist; #percentage of infection reduction; 100 = immunity
          var int infectionReduction; #flat amount infection damage is reduced by
          var int infectionResistType; #bitmask; type types of infection the damaged unit resists: 0 = all, 1 = Nurgle, 2 = GSC, 4 = Slaanesh; 3 = Nurgle + GSC, 5 = Nurgle + Slaanesh, 6 = GSC + Slaanesh

          unit.getRuleArmor armorRule;
          armorRule.getSize temp;
          if eq temp 2; # we ignore tanks
            #debug_log "Infection Scripts; damageUnit, offset 22: armorSize 2x2. Aborting:" temp;
            return;
          end;
          #debug_log "Infection Scripts; damageUnit, offset 22: armorSize:" temp;

          #we're not a 2x2, we've done damage and we're not totally immune to infection; it's time to set our other variables
          weapon_item.getRuleItem itemRule;
          weapon_item.getAmmoItem ammoItem;
          #debug_log "Infection Scripts; damageUnit, offset 22: Initialize, Target:" unit;
          #debug_log "Infection Scripts; damageUnit, offset 22: Initialize, Weapon:" itemRule;
          #debug_log "Infection Scripts; damageUnit, offset 22: Initialize, Ammo:" ammoItem;
          ammoItem.getTag infectionType Tag.INFECTION_TYPE;
          if le infectionType 0; #if we still have no infection type, check the weapon
            weapon_item.getTag infectionType Tag.INFECTION_TYPE;
            if le infectionType 0; #if we *still* have no infection type, cancel out
              #debug_log "Infection Scripts; damageUnit, offset 22: No infection type detected; aborting.";
              return;
            end;
          end;

          set infectionDamage to_health;
          add infectionDamage to_mana;

          if le infectionDamage 0; # only proceed if we actually do damage
            return;
          end;

          armorRule.getTag infectionResistType Tag.INFECTION_RESIST_TYPE; #if our infection resist is 100% and applies to all infection types we're immune; abort
          armorRule.getTag infectionResist Tag.INFECTION_RESIST;
          if and ge infectionResist 100 le infectionResistType 0;
            #debug_log "Infection Scripts; damageUnit, offset 22: Infection immune; aborting.";
            return;
          end;

          #if our infection is specific to a type, define that check if our infection resistance type applies
          if gt infectionResistType 0;
            set temp 0; #reset the temp var
            if eq infectionType 1; #check Nurgle typing
              if or eq infectionResistType 1 eq infectionResistType 3 eq infectionResistType 5 eq infectionResistType 9;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Nurgle infection resisted:" infectionResistType;
              else or eq infectionResistType 7 eq infectionResistType 11 eq infectionResistType 13;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Nurgle infection resisted:" infectionResistType;
              end;
            else eq infectionType 2; #check GSC typing
              if or eq infectionResistType 2 eq infectionResistType 3 eq infectionResistType 6 eq infectionResistType 10;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: GSC infection resisted:" infectionResistType;
              else or eq infectionResistType 7 eq infectionResistType 11 eq infectionResistType 14;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: GSC infection resisted:" infectionResistType;
              end;
            else eq infectionType 3; #check Slaanesh typing
              if or eq infectionResistType 4 eq infectionResistType 5 eq infectionResistType 6 eq infectionResistType 12;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Slaanesh infection resisted:" infectionResistType;
              else or eq infectionResistType 7 eq infectionResistType 13 eq infectionResistType 14;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Slaanesh infection resisted:" infectionResistType;
              end;
            else eq infectionType 4; #check Tzeentch typing
              if or eq infectionResistType 8 eq infectionResistType 9 eq infectionResistType 10 eq infectionResistType 12;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Tzeentch infection resisted:" infectionResistType;
              else or  eq infectionResistType 11 eq infectionResistType 13 eq infectionResistType 14;
                set temp 1;
                #debug_log "Infection Scripts; damageUnit, offset 22: Tzeentch infection resisted:" infectionResistType;
              end;
            end;
            #after checking our infection resist types, zero out infection resist/reduction if temp is false; i.e. we don't resist this particular infection type
            if neq temp 1;
              set infectionResist 0;
              set infectionReduction 0;
            end;
          end;

          if ge infectionResist 100; #again, don't bother proceeding if we have 100% resistance to this infection type
            #debug_log "Infection Scripts; damageUnit, offset 22: Immune to detected infection type; aborting.";
            return;
          end;

          ammoItem.getTag infectionDamageFlat Tag.INFECTION_DAMAGE_FLAT;
          ammoItem.getTag infectionPercentage Tag.INFECTION_DAMAGE_PERCENT;

          #Infection tags on weapon are cumulative with infection tags on ammo
          weapon_item.getTag temp Tag.INFECTION_DAMAGE_FLAT;
          add infectionDamageFlat temp;
          weapon_item.getTag temp Tag.INFECTION_DAMAGE_PERCENT;
          add infectionPercentage temp;

          #debug_log "Infection Scripts; damageUnit, offset 22: Initialize, infectionDamageFlat:" infectionDamageFlat;
          #debug_log "Infection Scripts; damageUnit, offset 22: Initialize, infectionPercentage:" infectionPercentage;

          #set the percentage of damage we deal as infection
          muldiv infectionDamage infectionPercentage 100;

          #set the base amount of infection damage to equal infection damage flat
          add infectionDamage infectionDamageFlat;

          #debug_log "Infection Scripts; damageUnit, offset 22: Base infection damage:" infectionDamage;
          armorRule.getTag infectionReduction Tag.INFECTION_REDUCTION;
          #debug_log "Infection Scripts; damageUnit, offset 22: Target infection reduction:" infectionReduction;
          if gt infectionReduction 0; #only proceed if infectionReduction isn't null; subtract our infection reduction
            sub infectionDamage infectionReduction;
            limit_lower infectionDamage 0; #cannot go lower than 0
          end;

          armorRule.getTag infectionResist Tag.INFECTION_RESIST;
          #debug_log "Infection Scripts; damageUnit, offset 22: Target infection resistance:" infectionResist;
          if gt infectionResist 0; #only proceed if infectionResist isn't null; apply infection resistance as a %
            limit_lower infectionResist 0; #cannot go lower than 0
            limit_upper infectionResist 100; #cannot go higher than 100
            sub infectionResist 100; #invert infectionResist
            mul infectionResist -1; #invert infectionResist
            muldiv infectionDamage infectionResist 100;
          end;

          if neq infectionType 2; #Devotion and Bless only protects against Chaos Corruption, not GSC infections.
            unit.Stats.getPsiSkill temp;
            if gt temp 50; #we only start getting the Emprah's protection from Chaos with Devotion above 50.
              sub temp 50;
              div temp 2;
              if ge temp 100; #abort if we get 100+% infection resistance
                #debug_log "Infection Scripts; damageUnit, offset 22: Aborting. Infection resistance from Devotion at 100%" temp;
                return;
              end;
              sub temp 100; #invert
              mul temp -1;
              muldiv infectionDamage temp 100;
            end;

            unit.getTag temp Tag.SOLDIER_BLESS_CORRUPTION_RESISTANCE; #now apply Chaos corruption resistance from Bless
            if gt temp 0;
              if ge temp 100; #abort if we get 100+% infection resistance
                #debug_log "Infection Scripts; damageUnit, offset 22: Aborting. Infection resistance from Bless at 100%" temp;
                return;
              end;
              sub temp 100; #invert
              mul temp -1;
              muldiv infectionDamage temp 100;
            end;

          end;

          #cannot have multiple infection types; the infection with higher damage takes priority; set appropriate variables
          unit.getTag currentInfectionType Tag.CURRENT_INFECTION_TYPE;
          unit.getTag currentInfectionDamage Tag.CURRENT_INFECTION_DAMAGE;

          if and neq currentInfectionType 0 neq infectionType currentInfectionType;
            #debug_log "Infection Scripts; damageUnit, offset 22: InfectionType Mismatch; currentInfectionType:" currentInfectionType;
            #debug_log "Infection Scripts; damageUnit, offset 22: InfectionType Mismatch; infectionType:" infectionType;
            if ge currentInfectionDamage infectionDamage; #if the old infection damage is equal to or greater than existing infection damage, abort.
              return;
            end;
            set currentInfectionDamage 0; #zero out the existing infection damage as the new infection type is now overriding
          end;

          #add the existing infection damage to the new infection damage
          #debug_log "Infection Scripts; damageUnit, offset 22: Existing Infection Damage:" currentInfectionDamage;
          add infectionDamage currentInfectionDamage;

          #now we actually apply the infection damage and type to the target unit
          if eq infectionDamage 0; # is not infected
            #debug_log "Infection Scripts; damageUnit, offset 22: Aborting. No infection damage:" infectionDamage;
            unit.setTag Tag.CURRENT_INFECTION_FACTION 0;
            unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0;
            unit.setTag Tag.CURRENT_INFECTION_TYPE 0;
            return;
          end;

          attacker.getFaction temp; #assign the faction of the infection spawned units; mostly for chaos
          unit.setTag Tag.CURRENT_INFECTION_FACTION temp;
          unit.setTag Tag.CURRENT_INFECTION_DAMAGE infectionDamage;
          unit.setTag Tag.CURRENT_INFECTION_TYPE infectionType;
          #debug_log "Infection Scripts; damageUnit, offset 22: Infection Faction:" temp;
          #debug_log "Infection Scripts; damageUnit, offset 22: Infection Damage:" infectionDamage;
          #debug_log "Infection Scripts; damageUnit, offset 22: Infection Type:" infectionType;

          unit.getFaction temp;
          if and eq temp FACTION_PLAYER le currentInfectionDamage 0; #notify the player that their unit was infected if they don't already have infection damage.
            battle_game.flashMessage "STR_SCRIPT_INFECTION_CORRUPTION_NOTICE";
          end;

          return;

      - new: ROSIGMA_dU_infections_2
        offset: 23 # any damage killing the infected soldier creates a zombie # may include a check for incendiary
        code: |
          var int infectionDamage;
          var int infectionType;
          var int infectionFaction;
          var int remainingHealth;
          var int temp;
          var int temp2;
          var int INFECTION_LOW_THRESHOLD;
          var int INFECTION_MID_THRESHOLD;
          var int INFECTION_HIGH_THRESHOLD;
          var ptr RuleUnit myRuleUnit;

          unit.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;

          if eq infectionDamage 0; # is not infected
            return;
          end;

          unit.getHealth remainingHealth;
          sub remainingHealth to_health;

          if gt remainingHealth 0; #attack isn't lethal
            #debug_log "Infection Scripts; damageUnit, offset 23: Aborting. Fatal Damage Not Incurred; Remaining Health:" remainingHealth;
            return;
          end;

          attacker.getFaction temp;
          unit.getFaction temp2;
          if and eq temp FACTION_PLAYER eq temp2 FACTION_PLAYER; #both attacker and target belong to the player faction; administer the Emperor's Peace
            #debug_log "Infection Scripts; damageUnit, offset 23: Aborting. Friendly fire." remainingHealth;
            unit.setTag Tag.CURRENT_INFECTION_FACTION 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_TYPE 0; #untag
            return;
          end;

          unit.getTag infectionFaction Tag.CURRENT_INFECTION_FACTION; #set the faction
          #debug_log "Infection Scripts; damageUnit, offset 23: Infection faction:" infectionFaction;
          if eq infectionFaction FACTION_PLAYER; #player infections don't spawn units for balance reasons
            #debug_log "Infection Scripts; damageUnit, offset 23: Aborting. PC sourced infection.";
            #clear tags:
            unit.setTag Tag.CURRENT_INFECTION_FACTION 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_TYPE 0; #untag
            return;
          end;

          unit.getHealthMax temp;
          limit_upper infectionDamage temp; #infection damage cannot exceed the victim's maximum health

          #set infection thresholds
          unit.getTag infectionType Tag.CURRENT_INFECTION_TYPE;
          set INFECTION_LOW_THRESHOLD 20;
          set INFECTION_MID_THRESHOLD 40;
          set INFECTION_HIGH_THRESHOLD 60;

          #debug_log "Infection Scripts; damageUnit, offset 23: Fatal Damage Incurred; Remaining Health:" remainingHealth;
          if eq infectionType 1; #if Nurgle
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              rules.getRuleUnit myRuleUnit "STR_NURGLE_ZOMBIE";
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection; spawns Boomer Zombie
              rules.getRuleUnit myRuleUnit "STR_NURGLE_BOOMER";
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection; spawns Rotbearer
              battle_game.randomRange temp 1 100;
              if lt temp 71;
                rules.getRuleUnit myRuleUnit "STR_NURGLE_ROTBEARER";
              else;
                rules.getRuleUnit myRuleUnit "STR_NURGLE_DAEMONETTE";
              end;
            else gt infectionDamage INFECTION_HIGH_THRESHOLD; #very high level infection; spawns Plaguebearer
              rules.getRuleUnit myRuleUnit "STR_CELATID_TERRORIST";
            end;
          else eq infectionType 2; #if GSC
            rules.getRuleUnit myRuleUnit "STR_GSC_ZOMBIE"; #only basic zombies
          else eq infectionType 3; #if Slaanesh
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              rules.getRuleUnit myRuleUnit "STR_ZOMBIE";
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection; spawns Lesser Daemonette
              rules.getRuleUnit myRuleUnit "STR_CHRYSSALID_TERRORISTSELENE";
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection; spawns Daemonette
              rules.getRuleUnit myRuleUnit "STR_CHRYSSALID_TERRORIST";
            else; #very high level infection; spawns Dire Daemonette
              rules.getRuleUnit myRuleUnit "STR_DIRE_DAEMONETTE";
            end;
          else eq infectionType 4; #if Tzeentch
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              battle_game.randomRange temp 1 100;
              if lt temp 34;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_MUTANT";
              else lt temp 67;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_WARP_THRALL";
              else;
                rules.getRuleUnit myRuleUnit "STR_BLUE_HORROR_TERRORIST";
              end;
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection
              battle_game.randomRange temp 1 100;
              if lt temp 34;
                rules.getRuleUnit myRuleUnit "STR_BLUE_HORROR_TERRORIST";
              else;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_LESSER_DAEMON";
              end;
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection
              rules.getRuleUnit myRuleUnit "STR_FLAMER_TERRORIST";
            else; #very high level infection
              rules.getRuleUnit myRuleUnit "STR_PINK_HORROR_TERRORIST";
            end;
          end;

          unit.setSpawnUnit myRuleUnit; #set this first to avoid overrides
          #debug_log "Infection Scripts; damageUnit, offset 23: Spawn Unit:" myRuleUnit;
          unit.setSpawnUnitInstantRespawn 1;

          #clear tags:
          unit.setTag Tag.CURRENT_INFECTION_FACTION 0; #untag
          unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0; #untag
          unit.setTag Tag.CURRENT_INFECTION_TYPE 0; #untag

          return;

    newTurnUnit:
      - new: ROSIGMA_nTU_infections
        offset: 22 # damage per turn including zombification
        code: |
          var int infectionDamage;
          var int infectionType;
          var int infectionFaction;
          var int remainingHealth;
          var ptr RuleUnit myRuleUnit;
          var int INFECTION_LOW_THRESHOLD;
          var int INFECTION_MID_THRESHOLD;
          var int INFECTION_HIGH_THRESHOLD;
          var int temp;
          var int temp2;
          var int infectionGrowthMultiplier;

          unit.getHealth remainingHealth;

          if le remainingHealth 0; # dead unit
            return;
          end;

          unit.getFaction temp;
          if eq side temp; # turn player
            #debug_log "Infection Scripts; newTurnUnit, offset 22: Aborting. Faction turn equals unit turn; unit:" unit;
            return;
          end;

          unit.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;

          if eq infectionDamage 0;
            return;
          end;

          unit.getTag infectionType Tag.CURRENT_INFECTION_TYPE;
          #debug_log "Infection Scripts; newTurnUnit, offset 22: Initialize, Unit:" unit;
          #debug_log "Infection Scripts; newTurnUnit, offset 22: Infection Damage:" infectionDamage;

          sub remainingHealth infectionDamage;
          limit_lower remainingHealth 0; #no negatives
          if gt remainingHealth 0; #if target is still alive drain stats

            #deplete Health, Morale, Stun and Energy
            #Stun gain equal to half infection level
            unit.getStun temp;
            set temp2 infectionDamage;
            div temp2 2;
            add temp temp2;
            unit.setStun temp;
            #debug_log "Infection Scripts; newTurnUnit, offset 22: Infection Stun:" temp2;

            #Energy drain equal to infection level
            unit.getEnergy temp;
            sub temp infectionDamage;
            limit_lower temp 0;
            unit.setEnergy temp;
            #debug_log "Infection Scripts; newTurnUnit, offset 22: Infection Energy Drain:" infectionDamage;

            #Morale drain equal to half infection level
            unit.getMorale temp;
            set temp2 infectionDamage;
            div temp2 2;
            sub temp temp2;
            limit_lower temp 0;
            unit.setMorale temp;
            #debug_log "Infection Scripts; newTurnUnit, offset 22: Infection Morale Drain:" temp2;

            #set new health level
            unit.setHealth remainingHealth;

            #Certain infection types increase over time
            if eq infectionType 1; #Nurgle infections accelerate aggressively; +50% per turn
              set infectionGrowthMultiplier 150;
            end;

            if eq infectionType 2; #GSC infections accelerate slowly; +10% per turn
              set infectionGrowthMultiplier 110;
            end;

            if gt infectionGrowthMultiplier 0;
              muldiv infectionDamage infectionGrowthMultiplier 100;
              #debug_log "Infection Scripts; newTurnUnit, offset 22: New Infection Damage Infection Growth:" infectionDamage;
              unit.setTag Tag.CURRENT_INFECTION_DAMAGE infectionDamage;
            end;
            return;
          end;


          unit.getTag infectionFaction Tag.CURRENT_INFECTION_FACTION; #set the faction
          #debug_log "Infection Scripts; newTurnUnit, offset 22: Infected unit infection faction:" infectionFaction;
          if eq infectionFaction FACTION_PLAYER; #player infections don't spawn units for balance reasons
            #debug_log "Infection Scripts; newTurnUnit, offset 22: Aborting. PC sourced infection.";
            #set new health level
            unit.setHealth remainingHealth;
            #clear tags:
            unit.setTag Tag.CURRENT_INFECTION_FACTION 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0; #untag
            unit.setTag Tag.CURRENT_INFECTION_TYPE 0; #untag
            return;
          end;

          #beyond this point it's assumed the victim has suffered lethal infection damage; time to transform it appropriately

          unit.getHealthMax temp;
          limit_upper infectionDamage temp; #infection damage cannot exceed the victim's maximum health

          set INFECTION_LOW_THRESHOLD 20;
          set INFECTION_MID_THRESHOLD 40;
          set INFECTION_HIGH_THRESHOLD 80;

          #debug_log "Infection Scripts; newTurnUnit, offset 22: Fatal Damage Incurred; Remaining Health:" remainingHealth;
          #if Nurgle
          if eq infectionType 1;
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              rules.getRuleUnit myRuleUnit "STR_NURGLE_ZOMBIE";
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection; spawns Boomer Zombie
              rules.getRuleUnit myRuleUnit "STR_NURGLE_BOOMER";
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection; spawns Rotbearer
              battle_game.randomRange temp 1 100;
              if lt temp 71;
                rules.getRuleUnit myRuleUnit "STR_NURGLE_ROTBEARER";
              else;
                rules.getRuleUnit myRuleUnit "STR_NURGLE_DAEMONETTE";
              end;
            else gt infectionDamage INFECTION_HIGH_THRESHOLD; #very high level infection; spawns Plaguebearer
              rules.getRuleUnit myRuleUnit "STR_CELATID_TERRORIST";
            end;
          else eq infectionType 2; #if GSC
            rules.getRuleUnit myRuleUnit "STR_GSC_ZOMBIE"; #only basic zombies
          else eq infectionType 3; #if Slaanesh
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              rules.getRuleUnit myRuleUnit "STR_ZOMBIE";
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection; spawns Lesser Daemonette
              rules.getRuleUnit myRuleUnit "STR_CHRYSSALID_TERRORISTSELENE";
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection; spawns Daemonette
              rules.getRuleUnit myRuleUnit "STR_CHRYSSALID_TERRORIST";
            else gt infectionDamage INFECTION_HIGH_THRESHOLD; #very high level infection; spawns Dire Daemonette
              rules.getRuleUnit myRuleUnit "STR_DIRE_DAEMONETTE";
            end;
          else eq infectionType 4; #if Tzeentch
            if le infectionDamage INFECTION_LOW_THRESHOLD; #low level infection
              battle_game.randomRange temp 1 100;
              if lt temp 34;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_MUTANT";
              else lt temp 67;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_WARP_THRALL";
              else;
                rules.getRuleUnit myRuleUnit "STR_BLUE_HORROR_TERRORIST";
              end;
            else and gt infectionDamage INFECTION_LOW_THRESHOLD le infectionDamage INFECTION_MID_THRESHOLD; #mid level infection
              battle_game.randomRange temp 1 100;
              if lt temp 34;
                rules.getRuleUnit myRuleUnit "STR_BLUE_HORROR_TERRORIST";
              else;
                rules.getRuleUnit myRuleUnit "STR_TZEENTCH_LESSER_DAEMON";
              end;
            else and gt infectionDamage INFECTION_MID_THRESHOLD le infectionDamage INFECTION_HIGH_THRESHOLD; #high level infection
              rules.getRuleUnit myRuleUnit "STR_FLAMER_TERRORIST";
            else; #very high level infection
              rules.getRuleUnit myRuleUnit "STR_PINK_HORROR_TERRORIST";
            end;
          end;

          unit.setSpawnUnit myRuleUnit; #set this first to avoid overrides
          #debug_log "Infection Scripts; newTurnUnit, offset 22: Spawn Unit:" myRuleUnit;
          unit.setSpawnUnitInstantRespawn 1;
          unit.setHealth remainingHealth;

          #debug_log "Infection Scripts; newTurnUnit, offset 22: Clear Infection Damage and Tags:" infectionDamage;
          unit.setTag Tag.CURRENT_INFECTION_FACTION 0; #untag
          unit.setTag Tag.CURRENT_INFECTION_DAMAGE 0; #untag
          unit.setTag Tag.CURRENT_INFECTION_TYPE 0; #untag

          return;


    recolorUnitSprite:
      - new: ROSIGMA_rUS_infections
        offset: 22 # change unit color to green so player knows who's infected
        code: |
          var int infectionDamage;
          var int infectionType;

          unit.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;
          unit.getTag infectionType Tag.CURRENT_INFECTION_TYPE;

          if gt infectionDamage 0;
            if eq infectionType 1;
              set_color new_pixel COLOR_X1_GREEN0; #Nurgle infection
            else eq infectionType 2;
              set_color new_pixel COLOR_X1_PURPLE0; #GSC infection
            else eq infectionType 3;
              set_color new_pixel COLOR_X1_PURPLE1; #Slaanesh infection
            else eq infectionType 4;
              set_color new_pixel COLOR_X1_BLUE1; #Tzeentch infection
            end;
          end;

          return new_pixel;


    recolorItemSprite:
      - new: ROSIGMA_rIS_infections
        offset: 22 # change unit color to green so player knows who's infected
        code: |
          var int infectionDamage; # would be cool if I could get the offset so I could change specific pixels to show a number
          var int infectionType;
          var ptr BattleUnit myUnit;

          if or eq blit_part blit_item_big eq blit_part blit_item_floor;
            item.getBattleUnit myUnit;
            if neq myUnit null;
              myUnit.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;
              myUnit.getTag infectionType Tag.CURRENT_INFECTION_TYPE;
              if gt infectionDamage 0;
                if eq infectionType 1;
                  set_color new_pixel COLOR_X1_GREEN0; #Nurgle infection
                else eq infectionType 2;
                  set_color new_pixel COLOR_X1_PURPLE0; #GSC infection
                else eq infectionType 3;
                  set_color new_pixel COLOR_X1_PURPLE1; #Slaanesh infection
                else eq infectionType 4;
                  set_color new_pixel COLOR_X1_BLUE1; #Tzeentch infection
                end;
              end;
            end;
          end;
          return new_pixel;

    healUnit:
      - new: ROSIGMA_healU_infections
        offset: 22 # heal infections
        code: |
          var ptr GeoscapeGame geoScape;
          var ptr RuleResearch researchTopic;
          var int researchLevel;
          var int temp;
          var int infectionDamage;

          #only proceed if we're using the heal action, otherwise cancel out
          if neq medikit_action_type medikit_action_heal;
            return;
          end;

          #if we have no infection, cancel out
          target.getTag infectionDamage Tag.CURRENT_INFECTION_DAMAGE;
          if le infectionDamage 0;
            return;
          end;

          battle_game.getTag researchLevel Tag.RESEARCH_LEVEL_CURE;
          #set our research level
          if lt researchLevel 20; #we don't care about setting this if we've maxed out our research level
            set researchLevel 5;
            battle_game.getGeoscapeGame geoScape;

            rules.getRuleResearch researchTopic "STR_APOC_BAY"; #apothecary bay research
            geoScape.isResearched temp researchTopic;
            if neq temp 0;
              mul researchLevel 2;
            end;

            rules.getRuleResearch researchTopic "STR_PSI_LAB"; #chapel research
            geoScape.isResearched temp researchTopic;
            if neq temp 0;
              mul researchLevel 2;
            end;
            #set research level
            battle_game.setTag Tag.RESEARCH_LEVEL_CURE researchLevel;
          end;

          #reduce infection level in proportion to research level
          #debug_log "Infection Scripts; healUnit, offset 22: Heal Amount:" researchLevel;
          #debug_log "Infection Scripts; healUnit, offset 22: Infection Amount Before Heal:" infectionDamage;
          sub infectionDamage researchLevel;
          #debug_log "Infection Scripts; healUnit, offset 22: Infection Amount After Heal:" infectionDamage;
          limit_lower infectionDamage 0;

          #let the player know infection was treated, and if there's remaining contamination
          if le infectionDamage 0;
            battle_game.flashMessage "STR_SCRIPT_INFECTION_HEAL_COMPLETE" infectionDamage;
            target.setTag Tag.CURRENT_INFECTION_TYPE 0; #unset infection type
          else;
            battle_game.flashMessage "STR_SCRIPT_INFECTION_HEAL_INCOMPLETE" infectionDamage;
          end;
          set wound_recovery 0; #the charge is expended healing the infection, not wounds
          set health_recovery 0; #the charge is expended healing the infection, not wounds
          target.setTag Tag.CURRENT_INFECTION_DAMAGE infectionDamage;

          return;

armors:
  - type: LTT_ARMOR #LEFT TURRET THUNDERHAWK ARMOR
    specialWeapon: STR_TURRET_RELOAD
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

  - type: RTT_ARMOR #RIGHT TURRET THUNDERHAWK ARMOR
    specialWeapon: STR_TURRET_RELOAD
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

  - type: PREDATOR_ARMOR
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

  - type: LTS_ARMOR #LEFT TURRET STORMTALON ARMOR
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

  - type: RTS_ARMOR #LEFT TURRET STORMTALON ARMOR
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

  - type: TARGET_GUARDSMAN #holographic guardsman zombie immunity
    tags:
      INFECTION_RESIST: 100 #infection immune
      INTIMIDATION_RESISTANCE: 100 #intimidation immune
      UNIT_TYPE_MECHANICAL: 1
      UNIT_TYPE_DECOY: 1

  - type: MUNITORIUM_ARMOR
    tags:
      INFECTION_RESIST: 100 #infection immune
      UNIT_TYPE_MECHANICAL: 1

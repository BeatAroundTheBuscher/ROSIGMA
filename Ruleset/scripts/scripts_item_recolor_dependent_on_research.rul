extended:
  tags:
    RuleItem:
      # Set to 1 if you want the item recolored with faction research.
      # Currently works with Arbites/Cult/General Chaos.
      ITEM_GETS_FACTION_RECOLOR: int

      # Set to 1 if you want to palette swap sprites for new items.
      # ITEM_GETS_FACTION_RECOLOR takes precedence over this.
      ITEM_IS_PALETTE_SWAP: int

      # The base color of the item by row of the palette
      ITEM_BASE_COLOR: int
      # Generic Black: 0
      # Guard Green: 4
      # Marine Blue: 7

      # Faction base colors are hard coded, can be changed on a per faction basis.
      # Arbites Grey: 15
      # Chaos Cult Brown: 10
      # General Chaos Red: 2
      ITEM_SWAP_BASE_COLOR: int
      # Used only if ITEM_IS_PALETTE_SWAP: 1

      # Also recolors an accent color to the same as the base color, though this can be changed per faction in the script.
      ITEM_GETS_ACCENT_RECOLOR: int
      ITEM_ACCENT_COLOR: int
      # Aquilla Gold: 1
      ITEM_SWAP_ACCENT_COLOR: int
      # Used only if ITEM_IS_PALETTE_SWAP is 1

  scripts:
    recolorItemSprite:
      - new: recolorItemWithResearch
        offset: 99
        code: |
          var ptr RuleItem weaponRuleset;
          var ptr GeoscapeGame geoScape;
          var ptr RuleResearch researchTopic;
          var int isArbites;
          var int isCult;
          var int isChaos;
          var int isWolf;
          var int isWBear;
          var int isPlayerRecolorFaction;
          var int getsRecolor;
          var int getsAccentRecolor;
          var int color;
          var int baseColor;
          var int accentColor;
          var int newBaseColor;
          var int newAccentColor;
          var ptr BattleUnit owner;
          var int ownerFaction;

          item.getRuleItem weaponRuleset;
          weaponRuleset.getTag getsRecolor Tag.ITEM_GETS_FACTION_RECOLOR;
          weaponRuleset.getTag getsAccentRecolor Tag.ITEM_GETS_ACCENT_RECOLOR;

          if eq getsRecolor 0;
            return new_pixel;
          else;
            item.getOwner owner;
            owner.getFaction ownerFaction;
            if neq ownerFaction FACTION_PLAYER; # Return if the owner isn't the player.
              return new_pixel;
            end;

            battle_game.getGeoscapeGame geoScape;
            rules.getRuleResearch researchTopic "STR_ARBITES";
            geoScape.isResearched isArbites researchTopic;

            rules.getRuleResearch researchTopic "STR_CHAOS_STRATEGY_ARBITES";
            geoScape.isResearched isCult researchTopic;

            rules.getRuleResearch researchTopic "STR_CHAOS_PATH";
            geoScape.isResearched isChaos researchTopic;

            rules.getRuleResearch researchTopic "STR_SPACEWOLVES_STRATEGY";
            geoScape.isResearched isWolf researchTopic;

            rules.getRuleResearch researchTopic "STR_WORDBEARERS_STRATEGY";
            geoScape.isResearched isWBear researchTopic;

            if or eq blit_part blit_item_big eq blit_part blit_item_lefthand eq blit_part blit_item_righthand eq blit_part blit_item_floor;
              item.getRuleItem weaponRuleset;
              if eq isWBear 1;
                set isPlayerRecolorFaction 1;
                set newBaseColor 2;
                set newAccentColor 0;
              else eq isWolf 1;
                set isPlayerRecolorFaction 1;
                set newBaseColor 15;
                set newAccentColor 1;
              else eq isCult 1;
                set isPlayerRecolorFaction 1;
                set newBaseColor 10;
                set newAccentColor 10;
              else eq isChaos 1;
                set isPlayerRecolorFaction 1;
                set newBaseColor 2;
                set newAccentColor 2;
              else eq isArbites 1;
                set isPlayerRecolorFaction 1;
                set newBaseColor 15;
                set newAccentColor 15;
              end;
              if eq isPlayerRecolorFaction 1;
                weaponRuleset.getTag baseColor Tag.ITEM_BASE_COLOR;
                get_color color new_pixel;
                if eq color baseColor;
                  set_color new_pixel newBaseColor;
                end;

                weaponRuleset.getTag getsAccentRecolor Tag.ITEM_GETS_ACCENT_RECOLOR;
                weaponRuleset.getTag accentColor Tag.ITEM_ACCENT_COLOR;
                if and eq getsAccentRecolor 1 eq color accentColor;
                  set_color new_pixel newAccentColor;
                end;
              end;
            end;
          end;
          add_shade new_pixel shade;
          return new_pixel;

      - new: recolorItemPaletteSwap
        offset: 99.1
        code: |
          var ptr RuleItem weaponRuleset;
          var int isSwap;
          var int getsAccentRecolor;
          var int color;
          var int baseColor;
          var int accentColor;
          var int newBaseColor;
          var int newAccentColor;

          item.getRuleItem weaponRuleset;
          weaponRuleset.getTag isSwap Tag.ITEM_IS_PALETTE_SWAP;
          weaponRuleset.getTag getsAccentRecolor Tag.ITEM_GETS_ACCENT_RECOLOR;

          if eq isSwap 0;
            return new_pixel;
          else;
            if or eq blit_part blit_item_big eq blit_part blit_item_lefthand eq blit_part blit_item_righthand eq blit_part blit_item_floor;
              item.getRuleItem weaponRuleset;
              weaponRuleset.getTag newBaseColor Tag.ITEM_SWAP_BASE_COLOR;
              weaponRuleset.getTag newAccentColor Tag.ITEM_SWAP_ACCENT_COLOR;

              weaponRuleset.getTag baseColor Tag.ITEM_BASE_COLOR;
              get_color color new_pixel;
              if eq color baseColor;
                set_color new_pixel newBaseColor;
              end;

              weaponRuleset.getTag getsAccentRecolor Tag.ITEM_GETS_ACCENT_RECOLOR;
              weaponRuleset.getTag accentColor Tag.ITEM_ACCENT_COLOR;
              if and eq getsAccentRecolor 1 eq color accentColor;
                set_color new_pixel newAccentColor;
              end;
            end;
          end;
          add_shade new_pixel shade;
          return new_pixel;

#
# Example: Adding these tags to the autogun causes the guard green base color
#  and the golden aquilla accents to get recolored to new faction colors.
#
#  - type: STR_AUTOGUN
#    tags:
#      ITEM_GETS_FACTION_RECOLOR: 1
#      ITEM_BASE_COLOR: 4
#      ITEM_GETS_ACCENT_RECOLOR: 1
#      ITEM_ACCENT_COLOR: 1
#
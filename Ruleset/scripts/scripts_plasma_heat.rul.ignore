

items:  
  - type: STR_PLASMA_RIFLE_TERRAN
    bigSprite: 300
    tuUnload: 999 # DO NOT UNLOAD WEAPONS, THEY ARE LIKELY TO BE HOT
    isExplodingInHands: true # won't explode though as it's not a grenade
    tags:
      ITEM_MAX_HEAT_LEVEL: 7
    scripts:
      selectItemSprite: |
        var int currentHeat;
        var int maxHeat;

        item.getTag maxHeat Tag.ITEM_MAX_HEAT_LEVEL;

        if and neq maxHeat 0 eq blit_part blit_item_big;
          item.getTag currentHeat Tag.ITEM_CURRENT_HEAT_LEVEL;
          
          if le currentHeat maxHeat;
            add sprite_index currentHeat;
          else;
            add sprite_index maxHeat;
          end;
        end;

        add sprite_index sprite_offset;
        return sprite_index;

        

extended:
  tags:
    RuleItem:
      ITEM_MAX_HEAT_LEVEL: int
    BattleItem:
      ITEM_CURRENT_HEAT_LEVEL: int
      ITEM_PREVIOUS_AMMO_COUNT: int

  scripts:

    createItem:
      - offset: 20 # maybe neccessary for multi stage missions?
        code: |
          var int temp;

          item.getTag temp Tag.ITEM_CURRENT_HEAT_LEVEL;
          if neq temp 0;
            item.setTag Tag.ITEM_CURRENT_HEAT_LEVEL 0;
          end;

          return;

    newTurnItem: # dissipate/increase heat level
      - offset: 20 
        code: |
          var int temp;
          var int currentHeat;
          var int maxHeat;
          var int currentAmmoCount;
          var int previousAmmoCount;
          var ptr RuleItem rItem;
          var ptre BattleItem ammoItem;
          var ptre BattleUnit bUnit;

          if neq side FACTION_PLAYER;
            return;
          end;

          item.getRuleItem rItem;
          rItem.getTag maxHeat Tag.ITEM_MAX_HEAT_LEVEL;
          if neq maxHeat 0;
            item.getTag currentHeat Tag.ITEM_CURRENT_HEAT_LEVEL;
            item.getTag previousAmmoCount Tag.ITEM_PREVIOUS_AMMO_COUNT;

            item.getAmmoItem ammoItem;
            ammoItem.getAmmoQuantity currentAmmoCount;

            debug_log "item" item;
            debug_log "ammoItem" ammoItem;

            debug_log "currentAmmoCount" currentAmmoCount;
            debug_log "previousAmmoCount" previousAmmoCount;

            if lt currentAmmoCount previousAmmoCount;
              set temp previousAmmoCount;
              sub temp currentAmmoCount; # delta heat
              add currentHeat temp;
            end;

            if neq currentHeat 0;
              sub currentHeat 1; # dissipate
            end;

            debug_log "currentHeat" currentHeat;

            if gt currentHeat maxHeat;
              set temp maxHeat;
              sub temp currentHeat;

              ammoItem.setAmmoQuantity 1; # 0 isn't possible
              item.setFuseEnabled 1; # destroy weapon
              item.setFuseTimer 0;

              # item.getOwner bUnit; # maybe damage unit
            end;

            item.setTag Tag.ITEM_PREVIOUS_AMMO_COUNT currentAmmoCount;
            item.setTag Tag.ITEM_CURRENT_HEAT_LEVEL currentHeat;
          end;

          return;
          

    accuracyMultiplierBonusStats: # dissipate/increase heat level
      - offset: 20 
        code: |
          var int temp;
          var int currentHeat;
          var int maxHeat;
          var ptr RuleItem rItem;

          weapon.getRuleItem rItem;
          rItem.getTag maxHeat Tag.ITEM_MAX_HEAT_LEVEL;

          if eq maxHeat 0;
            return bonus;
          end;

          weapon.getTag currentHeat Tag.ITEM_CURRENT_HEAT_LEVEL;

          set temp maxHeat;
          sub temp currentHeat;
          muldiv bonus temp maxHeat;

          if lt bonus 0;
            set bonus 0;
          end;

          return bonus;


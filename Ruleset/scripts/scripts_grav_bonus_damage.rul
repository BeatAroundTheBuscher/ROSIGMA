items:
  - &STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    type: STR_STUN_BOMB
    tags:
      GravPercentage: 4

  - type: STR_GRAVGUN_MC
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 5

  - type: AUX_CENTURION_GRAVGUN
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 6

  - type: STR_GRAVGUN_AOE_AMMO
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 4

  - type: STR_GRAVGUN_AOE_AMMO_SHOTGUN
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 4

  - type: STR_GRAVPISTOL_AMMO
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 4

  - type: STR_GRAVCANNON_AMMO
    refNode: *STR_GRAV_AMMO_BONUS_DAMAGE_TEMPLATE
    tags:
      GravPercentage: 6


extended:
  tags:
    RuleItem:
      GravPercentage: int  # can be on ammo or weapon, weapon overwrites ammo

  scripts:
    damageUnit:
      - new: ROSIGMA_dU_grav_damage_bonus
        offset: 1
        code: |
          var int temp;
          var int temp2;
          var int armor;
          var int percentage;
          var int weaponpercentage;
          var int ammopercentage;
          var ptre BattleItem ammo;
          var ptr RuleArmor rArmor;
          var ptr RuleDamageType damageType;
          var ptr RuleItem damagingItem;

          set temp to_health;
          if lt temp 1; # if no damage gets through the shield, abort; sanity check.
            return;
          end;

          damaging_item.getAmmoItem ammo;

          ammo.getTag ammopercentage Tag.GravPercentage;
          damaging_item.getTag weaponpercentage Tag.GravPercentage;
          if gt ammopercentage 0;
            set percentage ammopercentage;
          end;
          if gt weaponpercentage percentage; # use highest of weapon and ammo
            set percentage weaponpercentage;
          end;

          if lt percentage 0; #continue only if we have a %
            return;
          end;

          unit.getArmor temp SIDE_FRONT;
          add armor temp;
          unit.getArmor temp SIDE_LEFT;
          add armor temp;
          unit.getArmor temp SIDE_REAR;
          add armor temp;
          unit.getArmor temp SIDE_RIGHT;
          add armor temp;
          unit.getArmor temp SIDE_UNDER;
          add armor temp;
          muldiv armor percentage 100;

          damaging_item.getRuleItem damagingItem;
          damagingItem.getDamageType damageType;
          damageType.isAreaOfEffect temp2;
          if lt temp2 1;
            unit.getRuleArmor rArmor;
            rArmor.getSize temp2; # double our damage if we're not already AoE
            if gt temp2 1;
              mul armor temp;
            end;
          end;

          add to_health armor;

          return;


# https://www.ufopaedia.org/index.php/Script_(OpenXcom)

# https://openxcom.org/forum/index.php/topic,7974.msg124338.html#msg124338


# possible interesting APIs
# limit_lower


extended:
  tags:
    RuleItem:
      ITEM_BLESS_MELEE_ACCURACY: int
      ITEM_BLESS_FIRING_ACCURACY: int
    RuleSoldier:
      SOLDIER_IS_LONE_WOLF: int 
    BattleUnit:
      SOLDIER_BLESS_CURRENT_MELEE_BONUS: int
      SOLDIER_BLESS_CURRENT_FIRING_BONUS: int
      SOLDIER_IS_FANATIC: int


      


  scripts:
    hitUnit: # damageUnit:
      # doesn't consider fatal wounds, but eh
      - new: ROSIGMA_hU_stats_buff
        offset: 20
        code: |
          var int bufferBravery;
          var int blessPower;
          var int bonusBlessPower;
          var int temp;

          var ptr RuleItem rule;
          var int isWeaponBlessMeleeAccuracy;
          var int isWeaponBlessFiringAccuracy;

          var ptr RuleSoldier targetSoldier;
          var int isTargetLoneWolf;
          var int unitFaction;

          var int currentBlessBonus;
          var ptr GeoscapeSoldier geoUnit;

          unit.getFaction unitFaction;
          if neq unitFaction 0;
            return power part side;
          end;

          unit.getGeoscapeSoldier geoUnit;
          if eq geoUnit null; # sanity check whether the unit actually exists in geoscape or not (turrets)
            return power part side;
          end;

          unit.getRuleSoldier targetSoldier;
          targetSoldier.getTag isTargetLoneWolf Tag.SOLDIER_IS_LONE_WOLF;
          if neq isTargetLoneWolf 0; # don't bother with lone wolves
            return power part side;
          end;

          damaging_item.getRuleItem rule;
          rule.getTag isWeaponBlessMeleeAccuracy Tag.ITEM_BLESS_MELEE_ACCURACY;
          rule.getTag isWeaponBlessFiringAccuracy Tag.ITEM_BLESS_FIRING_ACCURACY; # bit mask may make more sense once more crop up

          if and eq isWeaponBlessMeleeAccuracy 0 eq isWeaponBlessFiringAccuracy 0; # stop here if not a valid item
            return power part side;
          end;

          attacker.Stats.getBravery bufferBravery;
          set blessPower 0; # 10;
          set bonusBlessPower 1;
          muldiv bonusBlessPower bufferBravery 5;
          add blessPower bonusBlessPower;

          if eq isWeaponBlessMeleeAccuracy 1;
            unit.getTag currentBlessBonus Tag.SOLDIER_BLESS_CURRENT_MELEE_BONUS;

            if gt blessPower currentBlessBonus;
              set temp 0;
              sub temp currentBlessBonus;
              unit.Stats.addMelee temp;  

              unit.setTag Tag.SOLDIER_IS_FANATIC 1; # handled in scripts_faith_vs_naughtiness.rul
              unit.setTag Tag.SOLDIER_BLESS_CURRENT_MELEE_BONUS blessPower;
              unit.Stats.addMelee blessPower;
            end;
          end;
          if eq isWeaponBlessFiringAccuracy 1;
            unit.getTag currentBlessBonus Tag.SOLDIER_BLESS_CURRENT_FIRING_BONUS;

            if gt blessPower currentBlessBonus;
              set temp 0;
              sub temp currentBlessBonus;
              unit.Stats.addFiring temp; 

              unit.setTag Tag.SOLDIER_BLESS_CURRENT_FIRING_BONUS blessPower;
              unit.Stats.addFiring blessPower;
            end;
          end;
          
          return power part side;

    newTurnUnit:
      # doesn't consider fatal wounds, but eh
      - new: ROSIGMA_nTU_stats_buff
        offset: 20
        code: |
          var int currentMeleeBlessBonus;
          var int currentFiringBlessBonus;
          var int temp;
          var int unitFaction;
          var ptr GeoscapeSoldier geoUnit; 

          var int dissipationFactor;
          set dissipationFactor 5;
          
          # Only run this at the beginning of the player's turn
          if neq 0 side;
            return;
          end;

          unit.getFaction unitFaction;

          if neq unitFaction 0;
            return;
          end;

          unit.getTag currentMeleeBlessBonus Tag.SOLDIER_BLESS_CURRENT_MELEE_BONUS;
          unit.getTag currentFiringBlessBonus Tag.SOLDIER_BLESS_CURRENT_FIRING_BONUS;
          if and eq currentMeleeBlessBonus 0 eq currentFiringBlessBonus 0;
            return; # nothing to do
          end;

          unit.getGeoscapeSoldier geoUnit;
          if eq geoUnit null; # sanity check whether the unit actually exists in geoscape or not (turrets)
            return;
          end;

          set temp 0;
          sub temp currentMeleeBlessBonus;
          unit.Stats.addMelee temp;

          set temp 0;
          sub temp currentFiringBlessBonus;
          unit.Stats.addFiring temp;        

          if gt currentMeleeBlessBonus dissipationFactor;
            sub currentMeleeBlessBonus dissipationFactor;
          else;
            set currentMeleeBlessBonus 0;
          end;

          unit.setTag Tag.SOLDIER_BLESS_CURRENT_MELEE_BONUS currentMeleeBlessBonus;
          unit.Stats.addMelee currentMeleeBlessBonus;
          
          if gt currentFiringBlessBonus dissipationFactor;
            sub currentFiringBlessBonus dissipationFactor;
          else;
            set currentFiringBlessBonus 0;
          end;

          unit.setTag Tag.SOLDIER_BLESS_CURRENT_FIRING_BONUS currentFiringBlessBonus;
          unit.Stats.addFiring currentFiringBlessBonus;

          return;